|mips
clock => regwritereg.OUTPUTSELECT
clock => PC[0].CLK
clock => PC[1].CLK
clock => PC[2].CLK
clock => PC[3].CLK
clock => PC[4].CLK
clock => PC[5].CLK
clock => PC[6].CLK
clock => PC[7].CLK
clock => PC[8].CLK
clock => PC[9].CLK
clock => PC[10].CLK
clock => PC[11].CLK
clock => PC[12].CLK
clock => PC[13].CLK
clock => PC[14].CLK
clock => PC[15].CLK
clock => PC[16].CLK
clock => PC[17].CLK
clock => PC[18].CLK
clock => PC[19].CLK
clock => PC[20].CLK
clock => PC[21].CLK
clock => PC[22].CLK
clock => PC[23].CLK
clock => PC[24].CLK
clock => PC[25].CLK
clock => PC[26].CLK
clock => PC[27].CLK
clock => PC[28].CLK
clock => PC[29].CLK
clock => PC[30].CLK
clock => PC[31].CLK


|mips|instruction_block:instr_block
instruction[0] <= registers.DATAOUT
instruction[1] <= registers.DATAOUT1
instruction[2] <= registers.DATAOUT2
instruction[3] <= registers.DATAOUT3
instruction[4] <= registers.DATAOUT4
instruction[5] <= registers.DATAOUT5
instruction[6] <= registers.DATAOUT6
instruction[7] <= registers.DATAOUT7
instruction[8] <= registers.DATAOUT8
instruction[9] <= registers.DATAOUT9
instruction[10] <= registers.DATAOUT10
instruction[11] <= registers.DATAOUT11
instruction[12] <= registers.DATAOUT12
instruction[13] <= registers.DATAOUT13
instruction[14] <= registers.DATAOUT14
instruction[15] <= registers.DATAOUT15
instruction[16] <= registers.DATAOUT16
instruction[17] <= registers.DATAOUT17
instruction[18] <= registers.DATAOUT18
instruction[19] <= registers.DATAOUT19
instruction[20] <= registers.DATAOUT20
instruction[21] <= registers.DATAOUT21
instruction[22] <= registers.DATAOUT22
instruction[23] <= registers.DATAOUT23
instruction[24] <= registers.DATAOUT24
instruction[25] <= registers.DATAOUT25
instruction[26] <= registers.DATAOUT26
instruction[27] <= registers.DATAOUT27
instruction[28] <= registers.DATAOUT28
instruction[29] <= registers.DATAOUT29
instruction[30] <= registers.DATAOUT30
instruction[31] <= registers.DATAOUT31
pc[0] => registers.RADDR
pc[1] => registers.RADDR1
pc[2] => registers.RADDR2
pc[3] => registers.RADDR3
pc[4] => registers.RADDR4
pc[5] => ~NO_FANOUT~
pc[6] => ~NO_FANOUT~
pc[7] => ~NO_FANOUT~
pc[8] => ~NO_FANOUT~
pc[9] => ~NO_FANOUT~
pc[10] => ~NO_FANOUT~
pc[11] => ~NO_FANOUT~
pc[12] => ~NO_FANOUT~
pc[13] => ~NO_FANOUT~
pc[14] => ~NO_FANOUT~
pc[15] => ~NO_FANOUT~
pc[16] => ~NO_FANOUT~
pc[17] => ~NO_FANOUT~
pc[18] => ~NO_FANOUT~
pc[19] => ~NO_FANOUT~
pc[20] => ~NO_FANOUT~
pc[21] => ~NO_FANOUT~
pc[22] => ~NO_FANOUT~
pc[23] => ~NO_FANOUT~
pc[24] => ~NO_FANOUT~
pc[25] => ~NO_FANOUT~
pc[26] => ~NO_FANOUT~
pc[27] => ~NO_FANOUT~
pc[28] => ~NO_FANOUT~
pc[29] => ~NO_FANOUT~
pc[30] => ~NO_FANOUT~
pc[31] => ~NO_FANOUT~


|mips|control_unit:controlUnit
regDst <= and1.DB_MAX_OUTPUT_PORT_TYPE
branch <= andBranch.DB_MAX_OUTPUT_PORT_TYPE
memRead <= andMemRead.DB_MAX_OUTPUT_PORT_TYPE
memWrite <= andMemWrite.DB_MAX_OUTPUT_PORT_TYPE
ALUop[0] <= alu0Or.DB_MAX_OUTPUT_PORT_TYPE
ALUop[1] <= alu1Or.DB_MAX_OUTPUT_PORT_TYPE
ALUop[2] <= alu2Or.DB_MAX_OUTPUT_PORT_TYPE
ALUsrc <= <GND>
regWrite <= or3.DB_MAX_OUTPUT_PORT_TYPE
jump <= <GND>
byteOperations <= <GND>
move <= andMove.DB_MAX_OUTPUT_PORT_TYPE
opcode[0] => andBranch.IN0
opcode[0] => mand7.IN0
opcode[0] => andfor2_1.IN0
opcode[0] => andfor1_1.IN0
opcode[0] => andfor1_2.IN0
opcode[0] => andfor1_4.IN0
opcode[0] => andfor0_4.IN0
opcode[0] => and1.IN0
opcode[0] => andMove.IN0
opcode[0] => mand8.IN0
opcode[0] => andfor2_2.IN0
opcode[0] => andfor1_3.IN0
opcode[0] => andfor0_1.IN0
opcode[1] => andBranch.IN1
opcode[1] => andfor2_1.IN1
opcode[1] => andfor1_1.IN1
opcode[1] => andfor1_2.IN1
opcode[1] => andfor1_4.IN1
opcode[1] => and1.IN1
opcode[1] => andMemRead.IN0
opcode[1] => andMemWrite.IN0
opcode[1] => andMove.IN1
opcode[1] => andfor2_3.IN0
opcode[1] => andfor2_4.IN0
opcode[1] => andfor2_5.IN0
opcode[1] => andfor1_3.IN1
opcode[1] => andfor0_2.IN0
opcode[1] => andfor0_3.IN0
opcode[1] => andfor0_4.IN1
opcode[1] => andfor0_5.IN0
opcode[2] => andfor1_4.IN2
opcode[2] => andfor0_4.IN2
opcode[2] => and1.IN2
opcode[2] => andMemRead.IN1
opcode[2] => andMemWrite.IN1
opcode[2] => andMove.IN2
opcode[2] => andfor2_2.IN1
opcode[2] => andfor2_3.IN1
opcode[2] => andfor2_4.IN1
opcode[2] => andfor2_5.IN1
opcode[2] => andfor1_1.IN2
opcode[2] => andfor1_3.IN2
opcode[2] => andfor0_1.IN1
opcode[2] => andfor0_2.IN1
opcode[2] => andfor0_3.IN1
opcode[2] => andfor0_5.IN1
opcode[3] => andMemRead.IN2
opcode[3] => andfor2_3.IN2
opcode[3] => andfor1_4.IN3
opcode[3] => andfor0_2.IN2
opcode[3] => and1.IN3
opcode[3] => andBranch.IN2
opcode[3] => andMemWrite.IN2
opcode[3] => andMove.IN3
opcode[3] => andfor2_1.IN2
opcode[3] => andfor2_2.IN2
opcode[3] => andfor2_4.IN2
opcode[3] => andfor2_5.IN2
opcode[3] => andfor1_1.IN3
opcode[3] => andfor1_2.IN2
opcode[3] => andfor1_3.IN3
opcode[3] => andfor0_1.IN2
opcode[3] => andfor0_3.IN2
opcode[3] => andfor0_4.IN3
opcode[3] => andfor0_5.IN2
opcode[4] => mand7.IN1
opcode[4] => andfor2_4.IN3
opcode[4] => andfor1_4.IN4
opcode[4] => andfor0_3.IN3
opcode[4] => and1.IN4
opcode[4] => andBranch.IN3
opcode[4] => andMemRead.IN3
opcode[4] => andMemWrite.IN3
opcode[4] => andMove.IN4
opcode[4] => and4.IN0
opcode[4] => mand8.IN1
opcode[4] => andfor2_1.IN3
opcode[4] => andfor2_2.IN3
opcode[4] => andfor2_3.IN3
opcode[4] => andfor2_5.IN3
opcode[4] => andfor1_1.IN4
opcode[4] => andfor1_2.IN3
opcode[4] => andfor1_3.IN4
opcode[4] => andfor0_1.IN3
opcode[4] => andfor0_2.IN3
opcode[4] => andfor0_4.IN4
opcode[4] => andfor0_5.IN3
opcode[5] => andBranch.IN4
opcode[5] => andMemWrite.IN4
opcode[5] => andMove.IN5
opcode[5] => mand7.IN2
opcode[5] => mand8.IN2
opcode[5] => andfor2_5.IN4
opcode[5] => andfor1_2.IN4
opcode[5] => andfor0_5.IN4
opcode[5] => and1.IN5
opcode[5] => andMemRead.IN4
opcode[5] => and4.IN1
opcode[5] => andfor2_2.IN4
opcode[5] => andfor2_3.IN4
opcode[5] => andfor2_4.IN4
opcode[5] => andfor1_3.IN5
opcode[5] => andfor1_4.IN5
opcode[5] => andfor0_1.IN4
opcode[5] => andfor0_2.IN4
opcode[5] => andfor0_3.IN4
opcode[5] => andfor0_4.IN5


|mips|alu_control:aluControl
alu_ctr[0] <= and2.DB_MAX_OUTPUT_PORT_TYPE
alu_ctr[1] <= and7.DB_MAX_OUTPUT_PORT_TYPE
alu_ctr[2] <= and8.DB_MAX_OUTPUT_PORT_TYPE
function_code[0] => xor1.IN0
function_code[0] => and4.IN0
function_code[1] => xor1.IN1
function_code[1] => and5.IN0
function_code[1] => or5.IN0
function_code[2] => and5.IN1
function_code[2] => or5.IN1
function_code[3] => ~NO_FANOUT~
function_code[4] => ~NO_FANOUT~
function_code[5] => ~NO_FANOUT~
ALUop[0] => and2.IN1
ALUop[0] => and4.IN1
ALUop[0] => or3.IN1
ALUop[0] => or4.IN0
ALUop[1] => and1.IN1
ALUop[1] => and3.IN0
ALUop[1] => or2.IN1
ALUop[1] => or4.IN1
ALUop[2] => and3.IN1
ALUop[2] => and8.IN1


|mips|register_block:registerBlock
read_data1[0] <= registers.DATAOUT
read_data1[1] <= registers.DATAOUT1
read_data1[2] <= registers.DATAOUT2
read_data1[3] <= registers.DATAOUT3
read_data1[4] <= registers.DATAOUT4
read_data1[5] <= registers.DATAOUT5
read_data1[6] <= registers.DATAOUT6
read_data1[7] <= registers.DATAOUT7
read_data1[8] <= registers.DATAOUT8
read_data1[9] <= registers.DATAOUT9
read_data1[10] <= registers.DATAOUT10
read_data1[11] <= registers.DATAOUT11
read_data1[12] <= registers.DATAOUT12
read_data1[13] <= registers.DATAOUT13
read_data1[14] <= registers.DATAOUT14
read_data1[15] <= registers.DATAOUT15
read_data1[16] <= registers.DATAOUT16
read_data1[17] <= registers.DATAOUT17
read_data1[18] <= registers.DATAOUT18
read_data1[19] <= registers.DATAOUT19
read_data1[20] <= registers.DATAOUT20
read_data1[21] <= registers.DATAOUT21
read_data1[22] <= registers.DATAOUT22
read_data1[23] <= registers.DATAOUT23
read_data1[24] <= registers.DATAOUT24
read_data1[25] <= registers.DATAOUT25
read_data1[26] <= registers.DATAOUT26
read_data1[27] <= registers.DATAOUT27
read_data1[28] <= registers.DATAOUT28
read_data1[29] <= registers.DATAOUT29
read_data1[30] <= registers.DATAOUT30
read_data1[31] <= registers.DATAOUT31
read_data2[0] <= registers.PORTBDATAOUT
read_data2[1] <= registers.PORTBDATAOUT1
read_data2[2] <= registers.PORTBDATAOUT2
read_data2[3] <= registers.PORTBDATAOUT3
read_data2[4] <= registers.PORTBDATAOUT4
read_data2[5] <= registers.PORTBDATAOUT5
read_data2[6] <= registers.PORTBDATAOUT6
read_data2[7] <= registers.PORTBDATAOUT7
read_data2[8] <= registers.PORTBDATAOUT8
read_data2[9] <= registers.PORTBDATAOUT9
read_data2[10] <= registers.PORTBDATAOUT10
read_data2[11] <= registers.PORTBDATAOUT11
read_data2[12] <= registers.PORTBDATAOUT12
read_data2[13] <= registers.PORTBDATAOUT13
read_data2[14] <= registers.PORTBDATAOUT14
read_data2[15] <= registers.PORTBDATAOUT15
read_data2[16] <= registers.PORTBDATAOUT16
read_data2[17] <= registers.PORTBDATAOUT17
read_data2[18] <= registers.PORTBDATAOUT18
read_data2[19] <= registers.PORTBDATAOUT19
read_data2[20] <= registers.PORTBDATAOUT20
read_data2[21] <= registers.PORTBDATAOUT21
read_data2[22] <= registers.PORTBDATAOUT22
read_data2[23] <= registers.PORTBDATAOUT23
read_data2[24] <= registers.PORTBDATAOUT24
read_data2[25] <= registers.PORTBDATAOUT25
read_data2[26] <= registers.PORTBDATAOUT26
read_data2[27] <= registers.PORTBDATAOUT27
read_data2[28] <= registers.PORTBDATAOUT28
read_data2[29] <= registers.PORTBDATAOUT29
read_data2[30] <= registers.PORTBDATAOUT30
read_data2[31] <= registers.PORTBDATAOUT31
write_data[0] => registers.data_a[0].DATAIN
write_data[0] => registers.DATAIN
write_data[1] => registers.data_a[1].DATAIN
write_data[1] => registers.DATAIN1
write_data[2] => registers.data_a[2].DATAIN
write_data[2] => registers.DATAIN2
write_data[3] => registers.data_a[3].DATAIN
write_data[3] => registers.DATAIN3
write_data[4] => registers.data_a[4].DATAIN
write_data[4] => registers.DATAIN4
write_data[5] => registers.data_a[5].DATAIN
write_data[5] => registers.DATAIN5
write_data[6] => registers.data_a[6].DATAIN
write_data[6] => registers.DATAIN6
write_data[7] => registers.data_a[7].DATAIN
write_data[7] => registers.DATAIN7
write_data[8] => registers.data_a[8].DATAIN
write_data[8] => registers.DATAIN8
write_data[9] => registers.data_a[9].DATAIN
write_data[9] => registers.DATAIN9
write_data[10] => registers.data_a[10].DATAIN
write_data[10] => registers.DATAIN10
write_data[11] => registers.data_a[11].DATAIN
write_data[11] => registers.DATAIN11
write_data[12] => registers.data_a[12].DATAIN
write_data[12] => registers.DATAIN12
write_data[13] => registers.data_a[13].DATAIN
write_data[13] => registers.DATAIN13
write_data[14] => registers.data_a[14].DATAIN
write_data[14] => registers.DATAIN14
write_data[15] => registers.data_a[15].DATAIN
write_data[15] => registers.DATAIN15
write_data[16] => registers.data_a[16].DATAIN
write_data[16] => registers.DATAIN16
write_data[17] => registers.data_a[17].DATAIN
write_data[17] => registers.DATAIN17
write_data[18] => registers.data_a[18].DATAIN
write_data[18] => registers.DATAIN18
write_data[19] => registers.data_a[19].DATAIN
write_data[19] => registers.DATAIN19
write_data[20] => registers.data_a[20].DATAIN
write_data[20] => registers.DATAIN20
write_data[21] => registers.data_a[21].DATAIN
write_data[21] => registers.DATAIN21
write_data[22] => registers.data_a[22].DATAIN
write_data[22] => registers.DATAIN22
write_data[23] => registers.data_a[23].DATAIN
write_data[23] => registers.DATAIN23
write_data[24] => registers.data_a[24].DATAIN
write_data[24] => registers.DATAIN24
write_data[25] => registers.data_a[25].DATAIN
write_data[25] => registers.DATAIN25
write_data[26] => registers.data_a[26].DATAIN
write_data[26] => registers.DATAIN26
write_data[27] => registers.data_a[27].DATAIN
write_data[27] => registers.DATAIN27
write_data[28] => registers.data_a[28].DATAIN
write_data[28] => registers.DATAIN28
write_data[29] => registers.data_a[29].DATAIN
write_data[29] => registers.DATAIN29
write_data[30] => registers.data_a[30].DATAIN
write_data[30] => registers.DATAIN30
write_data[31] => registers.data_a[31].DATAIN
write_data[31] => registers.DATAIN31
read_reg1[0] => registers.RADDR
read_reg1[1] => registers.RADDR1
read_reg1[2] => registers.RADDR2
read_reg1[3] => registers.RADDR3
read_reg1[4] => registers.RADDR4
read_reg2[0] => registers.PORTBRADDR
read_reg2[1] => registers.PORTBRADDR1
read_reg2[2] => registers.PORTBRADDR2
read_reg2[3] => registers.PORTBRADDR3
read_reg2[4] => registers.PORTBRADDR4
write_reg[0] => registers.waddr_a[0].DATAIN
write_reg[0] => registers.WADDR
write_reg[1] => registers.waddr_a[1].DATAIN
write_reg[1] => registers.WADDR1
write_reg[2] => registers.waddr_a[2].DATAIN
write_reg[2] => registers.WADDR2
write_reg[3] => registers.waddr_a[3].DATAIN
write_reg[3] => registers.WADDR3
write_reg[4] => registers.waddr_a[4].DATAIN
write_reg[4] => registers.WADDR4
regWrite => registers.we_a.CLK
regWrite => registers.waddr_a[9].CLK
regWrite => registers.waddr_a[8].CLK
regWrite => registers.waddr_a[7].CLK
regWrite => registers.waddr_a[6].CLK
regWrite => registers.waddr_a[5].CLK
regWrite => registers.waddr_a[4].CLK
regWrite => registers.waddr_a[3].CLK
regWrite => registers.waddr_a[2].CLK
regWrite => registers.waddr_a[1].CLK
regWrite => registers.waddr_a[0].CLK
regWrite => registers.data_a[31].CLK
regWrite => registers.data_a[30].CLK
regWrite => registers.data_a[29].CLK
regWrite => registers.data_a[28].CLK
regWrite => registers.data_a[27].CLK
regWrite => registers.data_a[26].CLK
regWrite => registers.data_a[25].CLK
regWrite => registers.data_a[24].CLK
regWrite => registers.data_a[23].CLK
regWrite => registers.data_a[22].CLK
regWrite => registers.data_a[21].CLK
regWrite => registers.data_a[20].CLK
regWrite => registers.data_a[19].CLK
regWrite => registers.data_a[18].CLK
regWrite => registers.data_a[17].CLK
regWrite => registers.data_a[16].CLK
regWrite => registers.data_a[15].CLK
regWrite => registers.data_a[14].CLK
regWrite => registers.data_a[13].CLK
regWrite => registers.data_a[12].CLK
regWrite => registers.data_a[11].CLK
regWrite => registers.data_a[10].CLK
regWrite => registers.data_a[9].CLK
regWrite => registers.data_a[8].CLK
regWrite => registers.data_a[7].CLK
regWrite => registers.data_a[6].CLK
regWrite => registers.data_a[5].CLK
regWrite => registers.data_a[4].CLK
regWrite => registers.data_a[3].CLK
regWrite => registers.data_a[2].CLK
regWrite => registers.data_a[1].CLK
regWrite => registers.data_a[0].CLK
regWrite => registers.CLK0


|mips|Alu:alu1
alu_result[0] <= full_adder_32bit:fa1.port0
alu_result[1] <= full_adder_32bit:fa1.port0
alu_result[2] <= full_adder_32bit:fa1.port0
alu_result[3] <= full_adder_32bit:fa1.port0
alu_result[4] <= full_adder_32bit:fa1.port0
alu_result[5] <= full_adder_32bit:fa1.port0
alu_result[6] <= full_adder_32bit:fa1.port0
alu_result[7] <= full_adder_32bit:fa1.port0
alu_result[8] <= full_adder_32bit:fa1.port0
alu_result[9] <= full_adder_32bit:fa1.port0
alu_result[10] <= full_adder_32bit:fa1.port0
alu_result[11] <= full_adder_32bit:fa1.port0
alu_result[12] <= full_adder_32bit:fa1.port0
alu_result[13] <= full_adder_32bit:fa1.port0
alu_result[14] <= full_adder_32bit:fa1.port0
alu_result[15] <= full_adder_32bit:fa1.port0
alu_result[16] <= full_adder_32bit:fa1.port0
alu_result[17] <= full_adder_32bit:fa1.port0
alu_result[18] <= full_adder_32bit:fa1.port0
alu_result[19] <= full_adder_32bit:fa1.port0
alu_result[20] <= full_adder_32bit:fa1.port0
alu_result[21] <= full_adder_32bit:fa1.port0
alu_result[22] <= full_adder_32bit:fa1.port0
alu_result[23] <= full_adder_32bit:fa1.port0
alu_result[24] <= full_adder_32bit:fa1.port0
alu_result[25] <= full_adder_32bit:fa1.port0
alu_result[26] <= full_adder_32bit:fa1.port0
alu_result[27] <= full_adder_32bit:fa1.port0
alu_result[28] <= full_adder_32bit:fa1.port0
alu_result[29] <= full_adder_32bit:fa1.port0
alu_result[30] <= full_adder_32bit:fa1.port0
alu_result[31] <= full_adder_32bit:fa1.port0
zero_bit <= <GND>
alu_src1[0] => alu_src1[0].IN1
alu_src1[1] => alu_src1[1].IN1
alu_src1[2] => alu_src1[2].IN1
alu_src1[3] => alu_src1[3].IN1
alu_src1[4] => alu_src1[4].IN1
alu_src1[5] => alu_src1[5].IN1
alu_src1[6] => alu_src1[6].IN1
alu_src1[7] => alu_src1[7].IN1
alu_src1[8] => alu_src1[8].IN1
alu_src1[9] => alu_src1[9].IN1
alu_src1[10] => alu_src1[10].IN1
alu_src1[11] => alu_src1[11].IN1
alu_src1[12] => alu_src1[12].IN1
alu_src1[13] => alu_src1[13].IN1
alu_src1[14] => alu_src1[14].IN1
alu_src1[15] => alu_src1[15].IN1
alu_src1[16] => alu_src1[16].IN1
alu_src1[17] => alu_src1[17].IN1
alu_src1[18] => alu_src1[18].IN1
alu_src1[19] => alu_src1[19].IN1
alu_src1[20] => alu_src1[20].IN1
alu_src1[21] => alu_src1[21].IN1
alu_src1[22] => alu_src1[22].IN1
alu_src1[23] => alu_src1[23].IN1
alu_src1[24] => alu_src1[24].IN1
alu_src1[25] => alu_src1[25].IN1
alu_src1[26] => alu_src1[26].IN1
alu_src1[27] => alu_src1[27].IN1
alu_src1[28] => alu_src1[28].IN1
alu_src1[29] => alu_src1[29].IN1
alu_src1[30] => alu_src1[30].IN1
alu_src1[31] => alu_src1[31].IN1
alu_src2[0] => alu_src2[0].IN1
alu_src2[1] => alu_src2[1].IN1
alu_src2[2] => alu_src2[2].IN1
alu_src2[3] => alu_src2[3].IN1
alu_src2[4] => alu_src2[4].IN1
alu_src2[5] => alu_src2[5].IN1
alu_src2[6] => alu_src2[6].IN1
alu_src2[7] => alu_src2[7].IN1
alu_src2[8] => alu_src2[8].IN1
alu_src2[9] => alu_src2[9].IN1
alu_src2[10] => alu_src2[10].IN1
alu_src2[11] => alu_src2[11].IN1
alu_src2[12] => alu_src2[12].IN1
alu_src2[13] => alu_src2[13].IN1
alu_src2[14] => alu_src2[14].IN1
alu_src2[15] => alu_src2[15].IN1
alu_src2[16] => alu_src2[16].IN1
alu_src2[17] => alu_src2[17].IN1
alu_src2[18] => alu_src2[18].IN1
alu_src2[19] => alu_src2[19].IN1
alu_src2[20] => alu_src2[20].IN1
alu_src2[21] => alu_src2[21].IN1
alu_src2[22] => alu_src2[22].IN1
alu_src2[23] => alu_src2[23].IN1
alu_src2[24] => alu_src2[24].IN1
alu_src2[25] => alu_src2[25].IN1
alu_src2[26] => alu_src2[26].IN1
alu_src2[27] => alu_src2[27].IN1
alu_src2[28] => alu_src2[28].IN1
alu_src2[29] => alu_src2[29].IN1
alu_src2[30] => alu_src2[30].IN1
alu_src2[31] => alu_src2[31].IN1
alu_ctr[0] => alu_ctr[0].IN1
alu_ctr[1] => alu_ctr[1].IN1
alu_ctr[2] => alu_ctr[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1
res[0] <= full_adder_4bit:fullader1.port0
res[1] <= full_adder_4bit:fullader1.port0
res[2] <= full_adder_4bit:fullader1.port0
res[3] <= full_adder_4bit:fullader1.port0
res[4] <= full_adder_4bit:fullader2.port0
res[5] <= full_adder_4bit:fullader2.port0
res[6] <= full_adder_4bit:fullader2.port0
res[7] <= full_adder_4bit:fullader2.port0
res[8] <= full_adder_4bit:fullader3.port0
res[9] <= full_adder_4bit:fullader3.port0
res[10] <= full_adder_4bit:fullader3.port0
res[11] <= full_adder_4bit:fullader3.port0
res[12] <= full_adder_4bit:fullader4.port0
res[13] <= full_adder_4bit:fullader4.port0
res[14] <= full_adder_4bit:fullader4.port0
res[15] <= full_adder_4bit:fullader4.port0
res[16] <= full_adder_4bit:fullader5.port0
res[17] <= full_adder_4bit:fullader5.port0
res[18] <= full_adder_4bit:fullader5.port0
res[19] <= full_adder_4bit:fullader5.port0
res[20] <= full_adder_4bit:fullader6.port0
res[21] <= full_adder_4bit:fullader6.port0
res[22] <= full_adder_4bit:fullader6.port0
res[23] <= full_adder_4bit:fullader6.port0
res[24] <= full_adder_4bit:fullader7.port0
res[25] <= full_adder_4bit:fullader7.port0
res[26] <= full_adder_4bit:fullader7.port0
res[27] <= full_adder_4bit:fullader7.port0
res[28] <= full_adder_4bit_lastBlock:fullader8.port0
res[29] <= full_adder_4bit_lastBlock:fullader8.port0
res[30] <= full_adder_4bit_lastBlock:fullader8.port0
res[31] <= full_adder_4bit_lastBlock:fullader8.port0
bit1[0] => bit1[0].IN2
bit1[1] => bit1[1].IN2
bit1[2] => bit1[2].IN2
bit1[3] => bit1[3].IN2
bit1[4] => bit1[4].IN2
bit1[5] => bit1[5].IN2
bit1[6] => bit1[6].IN2
bit1[7] => bit1[7].IN2
bit1[8] => bit1[8].IN2
bit1[9] => bit1[9].IN2
bit1[10] => bit1[10].IN2
bit1[11] => bit1[11].IN2
bit1[12] => bit1[12].IN2
bit1[13] => bit1[13].IN2
bit1[14] => bit1[14].IN2
bit1[15] => bit1[15].IN2
bit1[16] => bit1[16].IN2
bit1[17] => bit1[17].IN2
bit1[18] => bit1[18].IN2
bit1[19] => bit1[19].IN2
bit1[20] => bit1[20].IN2
bit1[21] => bit1[21].IN2
bit1[22] => bit1[22].IN2
bit1[23] => bit1[23].IN2
bit1[24] => bit1[24].IN2
bit1[25] => bit1[25].IN2
bit1[26] => bit1[26].IN2
bit1[27] => bit1[27].IN2
bit1[28] => bit1[28].IN2
bit1[29] => bit1[29].IN2
bit1[30] => bit1[30].IN2
bit1[31] => bit1[31].IN2
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
c_in => ~NO_FANOUT~
Alu_Op[0] => Alu_Op[0].IN9
Alu_Op[1] => Alu_Op[1].IN9
Alu_Op[2] => Alu_Op[2].IN9


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g
p[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
p[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
p[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
p[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
p[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
p[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
p[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
p[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
p[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
p[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
p[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
p[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
p[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
p[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
p[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
p[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
p[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
p[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
p[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
p[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
p[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
p[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
p[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
p[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
p[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
p[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
p[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
p[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
p[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
p[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
p[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
g[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
g[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
g[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
g[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
g[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
g[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
g[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
g[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
g[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
g[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
g[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
g[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
g[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
g[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
g[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
g[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
g[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
g[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
g[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
g[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
g[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
g[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
g[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
g[31] <= and32.DB_MAX_OUTPUT_PORT_TYPE
bit_not[0] <= mux_not:mux_for_not0.port0
bit_not[1] <= mux_not:mux_for_not1.port0
bit_not[2] <= mux_not:mux_for_not2.port0
bit_not[3] <= mux_not:mux_for_not3.port0
bit_not[4] <= mux_not:mux_for_not4.port0
bit_not[5] <= mux_not:mux_for_not5.port0
bit_not[6] <= mux_not:mux_for_not6.port0
bit_not[7] <= mux_not:mux_for_not7.port0
bit_not[8] <= mux_not:mux_for_not8.port0
bit_not[9] <= mux_not:mux_for_not9.port0
bit_not[10] <= mux_not:mux_for_not10.port0
bit_not[11] <= mux_not:mux_for_not11.port0
bit_not[12] <= mux_not:mux_for_not12.port0
bit_not[13] <= mux_not:mux_for_not13.port0
bit_not[14] <= mux_not:mux_for_not14.port0
bit_not[15] <= mux_not:mux_for_not15.port0
bit_not[16] <= mux_not:mux_for_not16.port0
bit_not[17] <= mux_not:mux_for_not17.port0
bit_not[18] <= mux_not:mux_for_not18.port0
bit_not[19] <= mux_not:mux_for_not19.port0
bit_not[20] <= mux_not:mux_for_not20.port0
bit_not[21] <= mux_not:mux_for_not21.port0
bit_not[22] <= mux_not:mux_for_not22.port0
bit_not[23] <= mux_not:mux_for_not23.port0
bit_not[24] <= mux_not:mux_for_not24.port0
bit_not[25] <= mux_not:mux_for_not25.port0
bit_not[26] <= mux_not:mux_for_not26.port0
bit_not[27] <= mux_not:mux_for_not27.port0
bit_not[28] <= mux_not:mux_for_not28.port0
bit_not[29] <= mux_not:mux_for_not29.port0
bit_not[30] <= mux_not:mux_for_not30.port0
bit_not[31] <= mux_not:mux_for_not31.port0
bit1[0] => or1.IN1
bit1[0] => and1.IN1
bit1[1] => or2.IN1
bit1[1] => and2.IN1
bit1[2] => or3.IN1
bit1[2] => and3.IN1
bit1[3] => or4.IN1
bit1[3] => and4.IN1
bit1[4] => or5.IN1
bit1[4] => and5.IN1
bit1[5] => or6.IN1
bit1[5] => and6.IN1
bit1[6] => or7.IN1
bit1[6] => and7.IN1
bit1[7] => or8.IN1
bit1[7] => and8.IN1
bit1[8] => or9.IN1
bit1[8] => and9.IN1
bit1[9] => or10.IN1
bit1[9] => and10.IN1
bit1[10] => or11.IN1
bit1[10] => and11.IN1
bit1[11] => or12.IN1
bit1[11] => and12.IN1
bit1[12] => or13.IN1
bit1[12] => and13.IN1
bit1[13] => or14.IN1
bit1[13] => and14.IN1
bit1[14] => or15.IN1
bit1[14] => and15.IN1
bit1[15] => or16.IN1
bit1[15] => and16.IN1
bit1[16] => or17.IN1
bit1[16] => and17.IN1
bit1[17] => or18.IN1
bit1[17] => and18.IN1
bit1[18] => or19.IN1
bit1[18] => and19.IN1
bit1[19] => or20.IN1
bit1[19] => and20.IN1
bit1[20] => or21.IN1
bit1[20] => and21.IN1
bit1[21] => or22.IN1
bit1[21] => and22.IN1
bit1[22] => or23.IN1
bit1[22] => and23.IN1
bit1[23] => or24.IN1
bit1[23] => and24.IN1
bit1[24] => or25.IN1
bit1[24] => and25.IN1
bit1[25] => or26.IN1
bit1[25] => and26.IN1
bit1[26] => or27.IN1
bit1[26] => and27.IN1
bit1[27] => or28.IN1
bit1[27] => and28.IN1
bit1[28] => or29.IN1
bit1[28] => and29.IN1
bit1[29] => or30.IN1
bit1[29] => and30.IN1
bit1[30] => or31.IN1
bit1[30] => and31.IN1
bit1[31] => or32.IN1
bit1[31] => and32.IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
Alu_Op[0] => Alu_Op[0].IN32
Alu_Op[1] => Alu_Op[1].IN32
Alu_Op[2] => Alu_Op[2].IN32


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not0
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not1
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not2
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not3
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not4
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not5
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not6
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not7
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not8
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not9
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not10
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not11
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not12
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not13
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not14
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not15
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not16
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not17
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not18
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not19
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not20
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not21
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not22
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not23
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not24
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not25
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not26
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not27
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not28
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not29
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not30
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not31
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|secondLevel_p_g:pAndg
p_secondLevel[0] <= p_1th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[1] <= p_2th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[2] <= p_3th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[3] <= p_4th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[4] <= p_5th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[5] <= p_6th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[6] <= p_7th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[7] <= p_8th_and3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[0] <= g_1t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[1] <= g_2t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[2] <= g_3t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[3] <= g_4t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[4] <= g_5t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[5] <= g_6t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[6] <= g_7t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[7] <= g_8t_or3.DB_MAX_OUTPUT_PORT_TYPE
p[0] => p_1th_and2.IN0
p[1] => p_1th_and2.IN1
p[1] => g_1t_and1.IN0
p[2] => p_1th_and1.IN0
p[3] => p_1th_and1.IN1
p[3] => g_1t_and4.IN0
p[4] => p_2th_and2.IN0
p[5] => p_2th_and2.IN1
p[5] => g_2t_and1.IN0
p[6] => p_2th_and1.IN0
p[7] => p_2th_and1.IN1
p[7] => g_2t_and4.IN0
p[8] => p_3th_and2.IN0
p[9] => p_3th_and2.IN1
p[9] => g_3t_and1.IN0
p[10] => p_3th_and1.IN0
p[11] => p_3th_and1.IN1
p[11] => g_3t_and4.IN0
p[12] => p_4th_and2.IN0
p[13] => p_4th_and2.IN1
p[14] => p_4th_and1.IN0
p[15] => p_4th_and1.IN1
p[15] => g_4t_and4.IN0
p[16] => p_5th_and2.IN0
p[17] => p_5th_and2.IN1
p[18] => p_5th_and1.IN0
p[19] => p_5th_and1.IN1
p[19] => g_5t_and4.IN0
p[20] => p_6th_and2.IN0
p[21] => p_6th_and2.IN1
p[22] => p_6th_and1.IN0
p[23] => p_6th_and1.IN1
p[23] => g_6t_and4.IN0
p[24] => p_7th_and2.IN0
p[25] => p_7th_and2.IN1
p[26] => p_7th_and1.IN0
p[27] => p_7th_and1.IN1
p[27] => g_7t_and4.IN0
p[28] => p_8th_and2.IN0
p[29] => p_8th_and2.IN1
p[30] => p_8th_and1.IN0
p[31] => p_8th_and1.IN1
p[31] => g_8t_and4.IN0
g[0] => g_1t_and1.IN1
g[1] => g_1t_and3.IN1
g[2] => g_1t_and4.IN1
g[3] => g_1t_or1.IN1
g[4] => g_2t_and1.IN1
g[5] => g_2t_and3.IN1
g[6] => g_2t_and4.IN1
g[7] => g_2t_or1.IN1
g[8] => g_3t_and1.IN1
g[9] => g_3t_and3.IN1
g[10] => g_3t_and4.IN1
g[11] => g_3t_or1.IN1
g[12] => ~NO_FANOUT~
g[13] => g_4t_and3.IN1
g[14] => g_4t_and4.IN1
g[15] => g_4t_or1.IN1
g[16] => ~NO_FANOUT~
g[17] => g_5t_and3.IN1
g[18] => g_5t_and4.IN1
g[19] => g_5t_or1.IN1
g[20] => ~NO_FANOUT~
g[21] => g_6t_and3.IN1
g[22] => g_6t_and4.IN1
g[23] => g_6t_or1.IN1
g[24] => ~NO_FANOUT~
g[25] => g_7t_and3.IN1
g[26] => g_7t_and4.IN1
g[27] => g_7t_or1.IN1
g[28] => ~NO_FANOUT~
g[29] => g_8t_and3.IN1
g[30] => g_8t_and4.IN1
g[31] => g_8t_or1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|carry_Lookahead_Level2:cl2
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
res[4] <= res_c5.DB_MAX_OUTPUT_PORT_TYPE
res[5] <= res_c6.DB_MAX_OUTPUT_PORT_TYPE
res[6] <= res_c7.DB_MAX_OUTPUT_PORT_TYPE
res[7] <= res_c8.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
p[4] => andPC4.IN1
p[5] => andPC5.IN1
p[6] => andPC6.IN1
p[7] => andPC7.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
g[4] => res_c5.IN1
g[5] => res_c6.IN1
g[6] => res_c7.IN1
g[7] => res_c8.IN1
c_in => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_adder_lastBit:fulladder4.port0
set <= full_adder_lastBit:fulladder4.port1
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN4


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4
result <= mux_3x1:mux.port0
set <= set_set.DB_MAX_OUTPUT_PORT_TYPE
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
c_in => overflow.IN0
c_out => overflow.IN1
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|Alu:alu1|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|mux2x1_5bit:mux2x1_5bit_1
result[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
result1[0] => and1.IN0
result1[1] => and2.IN0
result1[2] => and3.IN0
result1[3] => and4.IN0
result1[4] => and5.IN0
result2[0] => and6.IN0
result2[1] => and7.IN0
result2[2] => and8.IN0
result2[3] => and9.IN0
result2[4] => and10.IN0
select => and6.IN1
select => and7.IN1
select => and8.IN1
select => and9.IN1
select => and10.IN1
select => and1.IN1
select => and2.IN1
select => and3.IN1
select => and4.IN1
select => and5.IN1


|mips|mux2x1_32bit:mux2x1_31bit_1
result[0] <= my_or_32bit:or3.port0
result[1] <= my_or_32bit:or3.port0
result[2] <= my_or_32bit:or3.port0
result[3] <= my_or_32bit:or3.port0
result[4] <= my_or_32bit:or3.port0
result[5] <= my_or_32bit:or3.port0
result[6] <= my_or_32bit:or3.port0
result[7] <= my_or_32bit:or3.port0
result[8] <= my_or_32bit:or3.port0
result[9] <= my_or_32bit:or3.port0
result[10] <= my_or_32bit:or3.port0
result[11] <= my_or_32bit:or3.port0
result[12] <= my_or_32bit:or3.port0
result[13] <= my_or_32bit:or3.port0
result[14] <= my_or_32bit:or3.port0
result[15] <= my_or_32bit:or3.port0
result[16] <= my_or_32bit:or3.port0
result[17] <= my_or_32bit:or3.port0
result[18] <= my_or_32bit:or3.port0
result[19] <= my_or_32bit:or3.port0
result[20] <= my_or_32bit:or3.port0
result[21] <= my_or_32bit:or3.port0
result[22] <= my_or_32bit:or3.port0
result[23] <= my_or_32bit:or3.port0
result[24] <= my_or_32bit:or3.port0
result[25] <= my_or_32bit:or3.port0
result[26] <= my_or_32bit:or3.port0
result[27] <= my_or_32bit:or3.port0
result[28] <= my_or_32bit:or3.port0
result[29] <= my_or_32bit:or3.port0
result[30] <= my_or_32bit:or3.port0
result[31] <= my_or_32bit:or3.port0
result1[0] => result1[0].IN1
result1[1] => result1[1].IN1
result1[2] => result1[2].IN1
result1[3] => result1[3].IN1
result1[4] => result1[4].IN1
result1[5] => result1[5].IN1
result1[6] => result1[6].IN1
result1[7] => result1[7].IN1
result1[8] => result1[8].IN1
result1[9] => result1[9].IN1
result1[10] => result1[10].IN1
result1[11] => result1[11].IN1
result1[12] => result1[12].IN1
result1[13] => result1[13].IN1
result1[14] => result1[14].IN1
result1[15] => result1[15].IN1
result1[16] => result1[16].IN1
result1[17] => result1[17].IN1
result1[18] => result1[18].IN1
result1[19] => result1[19].IN1
result1[20] => result1[20].IN1
result1[21] => result1[21].IN1
result1[22] => result1[22].IN1
result1[23] => result1[23].IN1
result1[24] => result1[24].IN1
result1[25] => result1[25].IN1
result1[26] => result1[26].IN1
result1[27] => result1[27].IN1
result1[28] => result1[28].IN1
result1[29] => result1[29].IN1
result1[30] => result1[30].IN1
result1[31] => result1[31].IN1
result2[0] => result2[0].IN1
result2[1] => result2[1].IN1
result2[2] => result2[2].IN1
result2[3] => result2[3].IN1
result2[4] => result2[4].IN1
result2[5] => result2[5].IN1
result2[6] => result2[6].IN1
result2[7] => result2[7].IN1
result2[8] => result2[8].IN1
result2[9] => result2[9].IN1
result2[10] => result2[10].IN1
result2[11] => result2[11].IN1
result2[12] => result2[12].IN1
result2[13] => result2[13].IN1
result2[14] => result2[14].IN1
result2[15] => result2[15].IN1
result2[16] => result2[16].IN1
result2[17] => result2[17].IN1
result2[18] => result2[18].IN1
result2[19] => result2[19].IN1
result2[20] => result2[20].IN1
result2[21] => result2[21].IN1
result2[22] => result2[22].IN1
result2[23] => result2[23].IN1
result2[24] => result2[24].IN1
result2[25] => result2[25].IN1
result2[26] => result2[26].IN1
result2[27] => result2[27].IN1
result2[28] => result2[28].IN1
result2[29] => result2[29].IN1
result2[30] => result2[30].IN1
result2[31] => result2[31].IN1
sel => sel.IN2


|mips|mux2x1_32bit:mux2x1_31bit_1|extend_32bit:extend_32bit1
out[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
a => or2.IN0
a => or3.IN0
a => or4.IN0
a => or5.IN0
a => or6.IN0
a => or7.IN0
a => or8.IN0
a => or9.IN0
a => or10.IN0
a => or11.IN0
a => or12.IN0
a => or13.IN0
a => or14.IN0
a => or15.IN0
a => or16.IN0
a => or17.IN0
a => or18.IN0
a => or19.IN0
a => or20.IN0
a => or21.IN0
a => or22.IN0
a => or23.IN0
a => or24.IN0
a => or25.IN0
a => or26.IN0
a => or27.IN0
a => or28.IN0
a => or29.IN0
a => or30.IN0
a => or31.IN0
a => or32.IN0
b => or2.IN1
b => or3.IN1
b => or4.IN1
b => or5.IN1
b => or6.IN1
b => or7.IN1
b => or8.IN1
b => or9.IN1
b => or10.IN1
b => or11.IN1
b => or12.IN1
b => or13.IN1
b => or14.IN1
b => or15.IN1
b => or16.IN1
b => or17.IN1
b => or18.IN1
b => or19.IN1
b => or20.IN1
b => or21.IN1
b => or22.IN1
b => or23.IN1
b => or24.IN1
b => or25.IN1
b => or26.IN1
b => or27.IN1
b => or28.IN1
b => or29.IN1
b => or30.IN1
b => or31.IN1
b => or32.IN1


|mips|mux2x1_32bit:mux2x1_31bit_1|extend_32bit:extend_32bit2
out[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
a => or2.IN0
a => or3.IN0
a => or4.IN0
a => or5.IN0
a => or6.IN0
a => or7.IN0
a => or8.IN0
a => or9.IN0
a => or10.IN0
a => or11.IN0
a => or12.IN0
a => or13.IN0
a => or14.IN0
a => or15.IN0
a => or16.IN0
a => or17.IN0
a => or18.IN0
a => or19.IN0
a => or20.IN0
a => or21.IN0
a => or22.IN0
a => or23.IN0
a => or24.IN0
a => or25.IN0
a => or26.IN0
a => or27.IN0
a => or28.IN0
a => or29.IN0
a => or30.IN0
a => or31.IN0
a => or32.IN0
b => or2.IN1
b => or3.IN1
b => or4.IN1
b => or5.IN1
b => or6.IN1
b => or7.IN1
b => or8.IN1
b => or9.IN1
b => or10.IN1
b => or11.IN1
b => or12.IN1
b => or13.IN1
b => or14.IN1
b => or15.IN1
b => or16.IN1
b => or17.IN1
b => or18.IN1
b => or19.IN1
b => or20.IN1
b => or21.IN1
b => or22.IN1
b => or23.IN1
b => or24.IN1
b => or25.IN1
b => or26.IN1
b => or27.IN1
b => or28.IN1
b => or29.IN1
b => or30.IN1
b => or31.IN1
b => or32.IN1


|mips|mux2x1_32bit:mux2x1_31bit_1|my_and_32bit:and1
out[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and32.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and1.IN0
a[1] => and2.IN0
a[2] => and3.IN0
a[3] => and4.IN0
a[4] => and5.IN0
a[5] => and6.IN0
a[6] => and7.IN0
a[7] => and8.IN0
a[8] => and9.IN0
a[9] => and10.IN0
a[10] => and11.IN0
a[11] => and12.IN0
a[12] => and13.IN0
a[13] => and14.IN0
a[14] => and15.IN0
a[15] => and16.IN0
a[16] => and17.IN0
a[17] => and18.IN0
a[18] => and19.IN0
a[19] => and20.IN0
a[20] => and21.IN0
a[21] => and22.IN0
a[22] => and23.IN0
a[23] => and24.IN0
a[24] => and25.IN0
a[25] => and26.IN0
a[26] => and27.IN0
a[27] => and28.IN0
a[28] => and29.IN0
a[29] => and30.IN0
a[30] => and31.IN0
a[31] => and32.IN0
b[0] => and1.IN1
b[1] => and2.IN1
b[2] => and3.IN1
b[3] => and4.IN1
b[4] => and5.IN1
b[5] => and6.IN1
b[6] => and7.IN1
b[7] => and8.IN1
b[8] => and9.IN1
b[9] => and10.IN1
b[10] => and11.IN1
b[11] => and12.IN1
b[12] => and13.IN1
b[13] => and14.IN1
b[14] => and15.IN1
b[15] => and16.IN1
b[16] => and17.IN1
b[17] => and18.IN1
b[18] => and19.IN1
b[19] => and20.IN1
b[20] => and21.IN1
b[21] => and22.IN1
b[22] => and23.IN1
b[23] => and24.IN1
b[24] => and25.IN1
b[25] => and26.IN1
b[26] => and27.IN1
b[27] => and28.IN1
b[28] => and29.IN1
b[29] => and30.IN1
b[30] => and31.IN1
b[31] => and32.IN1


|mips|mux2x1_32bit:mux2x1_31bit_1|my_and_32bit:and2
out[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and32.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and1.IN0
a[1] => and2.IN0
a[2] => and3.IN0
a[3] => and4.IN0
a[4] => and5.IN0
a[5] => and6.IN0
a[6] => and7.IN0
a[7] => and8.IN0
a[8] => and9.IN0
a[9] => and10.IN0
a[10] => and11.IN0
a[11] => and12.IN0
a[12] => and13.IN0
a[13] => and14.IN0
a[14] => and15.IN0
a[15] => and16.IN0
a[16] => and17.IN0
a[17] => and18.IN0
a[18] => and19.IN0
a[19] => and20.IN0
a[20] => and21.IN0
a[21] => and22.IN0
a[22] => and23.IN0
a[23] => and24.IN0
a[24] => and25.IN0
a[25] => and26.IN0
a[26] => and27.IN0
a[27] => and28.IN0
a[28] => and29.IN0
a[29] => and30.IN0
a[30] => and31.IN0
a[31] => and32.IN0
b[0] => and1.IN1
b[1] => and2.IN1
b[2] => and3.IN1
b[3] => and4.IN1
b[4] => and5.IN1
b[5] => and6.IN1
b[6] => and7.IN1
b[7] => and8.IN1
b[8] => and9.IN1
b[9] => and10.IN1
b[10] => and11.IN1
b[11] => and12.IN1
b[12] => and13.IN1
b[13] => and14.IN1
b[14] => and15.IN1
b[15] => and16.IN1
b[16] => and17.IN1
b[17] => and18.IN1
b[18] => and19.IN1
b[19] => and20.IN1
b[20] => and21.IN1
b[21] => and22.IN1
b[22] => and23.IN1
b[23] => and24.IN1
b[24] => and25.IN1
b[25] => and26.IN1
b[26] => and27.IN1
b[27] => and28.IN1
b[28] => and29.IN1
b[29] => and30.IN1
b[30] => and31.IN1
b[31] => and32.IN1


|mips|mux2x1_32bit:mux2x1_31bit_1|my_or_32bit:or3
out[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
a[0] => or1.IN0
a[1] => or2.IN0
a[2] => or3.IN0
a[3] => or4.IN0
a[4] => or5.IN0
a[5] => or6.IN0
a[6] => or7.IN0
a[7] => or8.IN0
a[8] => or9.IN0
a[9] => or10.IN0
a[10] => or11.IN0
a[11] => or12.IN0
a[12] => or13.IN0
a[13] => or14.IN0
a[14] => or15.IN0
a[15] => or16.IN0
a[16] => or17.IN0
a[17] => or18.IN0
a[18] => or19.IN0
a[19] => or20.IN0
a[20] => or21.IN0
a[21] => or22.IN0
a[22] => or23.IN0
a[23] => or24.IN0
a[24] => or25.IN0
a[25] => or26.IN0
a[26] => or27.IN0
a[27] => or28.IN0
a[28] => or29.IN0
a[29] => or30.IN0
a[30] => or31.IN0
a[31] => or32.IN0
b[0] => or1.IN1
b[1] => or2.IN1
b[2] => or3.IN1
b[3] => or4.IN1
b[4] => or5.IN1
b[5] => or6.IN1
b[6] => or7.IN1
b[7] => or8.IN1
b[8] => or9.IN1
b[9] => or10.IN1
b[10] => or11.IN1
b[11] => or12.IN1
b[12] => or13.IN1
b[13] => or14.IN1
b[14] => or15.IN1
b[15] => or16.IN1
b[16] => or17.IN1
b[17] => or18.IN1
b[18] => or19.IN1
b[19] => or20.IN1
b[20] => or21.IN1
b[21] => or22.IN1
b[22] => or23.IN1
b[23] => or24.IN1
b[24] => or25.IN1
b[25] => or26.IN1
b[26] => or27.IN1
b[27] => or28.IN1
b[28] => or29.IN1
b[29] => or30.IN1
b[30] => or31.IN1
b[31] => or32.IN1


|mips|full_adder_32bit:addPc
res[0] <= full_adder_4bit:fullader1.port0
res[1] <= full_adder_4bit:fullader1.port0
res[2] <= full_adder_4bit:fullader1.port0
res[3] <= full_adder_4bit:fullader1.port0
res[4] <= full_adder_4bit:fullader2.port0
res[5] <= full_adder_4bit:fullader2.port0
res[6] <= full_adder_4bit:fullader2.port0
res[7] <= full_adder_4bit:fullader2.port0
res[8] <= full_adder_4bit:fullader3.port0
res[9] <= full_adder_4bit:fullader3.port0
res[10] <= full_adder_4bit:fullader3.port0
res[11] <= full_adder_4bit:fullader3.port0
res[12] <= full_adder_4bit:fullader4.port0
res[13] <= full_adder_4bit:fullader4.port0
res[14] <= full_adder_4bit:fullader4.port0
res[15] <= full_adder_4bit:fullader4.port0
res[16] <= full_adder_4bit:fullader5.port0
res[17] <= full_adder_4bit:fullader5.port0
res[18] <= full_adder_4bit:fullader5.port0
res[19] <= full_adder_4bit:fullader5.port0
res[20] <= full_adder_4bit:fullader6.port0
res[21] <= full_adder_4bit:fullader6.port0
res[22] <= full_adder_4bit:fullader6.port0
res[23] <= full_adder_4bit:fullader6.port0
res[24] <= full_adder_4bit:fullader7.port0
res[25] <= full_adder_4bit:fullader7.port0
res[26] <= full_adder_4bit:fullader7.port0
res[27] <= full_adder_4bit:fullader7.port0
res[28] <= full_adder_4bit_lastBlock:fullader8.port0
res[29] <= full_adder_4bit_lastBlock:fullader8.port0
res[30] <= full_adder_4bit_lastBlock:fullader8.port0
res[31] <= full_adder_4bit_lastBlock:fullader8.port0
bit1[0] => bit1[0].IN2
bit1[1] => bit1[1].IN2
bit1[2] => bit1[2].IN2
bit1[3] => bit1[3].IN2
bit1[4] => bit1[4].IN2
bit1[5] => bit1[5].IN2
bit1[6] => bit1[6].IN2
bit1[7] => bit1[7].IN2
bit1[8] => bit1[8].IN2
bit1[9] => bit1[9].IN2
bit1[10] => bit1[10].IN2
bit1[11] => bit1[11].IN2
bit1[12] => bit1[12].IN2
bit1[13] => bit1[13].IN2
bit1[14] => bit1[14].IN2
bit1[15] => bit1[15].IN2
bit1[16] => bit1[16].IN2
bit1[17] => bit1[17].IN2
bit1[18] => bit1[18].IN2
bit1[19] => bit1[19].IN2
bit1[20] => bit1[20].IN2
bit1[21] => bit1[21].IN2
bit1[22] => bit1[22].IN2
bit1[23] => bit1[23].IN2
bit1[24] => bit1[24].IN2
bit1[25] => bit1[25].IN2
bit1[26] => bit1[26].IN2
bit1[27] => bit1[27].IN2
bit1[28] => bit1[28].IN2
bit1[29] => bit1[29].IN2
bit1[30] => bit1[30].IN2
bit1[31] => bit1[31].IN2
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
c_in => ~NO_FANOUT~
Alu_Op[0] => Alu_Op[0].IN9
Alu_Op[1] => Alu_Op[1].IN9
Alu_Op[2] => Alu_Op[2].IN9


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g
p[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
p[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
p[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
p[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
p[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
p[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
p[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
p[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
p[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
p[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
p[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
p[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
p[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
p[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
p[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
p[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
p[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
p[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
p[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
p[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
p[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
p[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
p[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
p[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
p[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
p[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
p[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
p[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
p[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
p[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
p[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
g[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
g[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
g[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
g[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
g[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
g[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
g[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
g[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
g[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
g[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
g[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
g[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
g[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
g[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
g[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
g[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
g[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
g[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
g[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
g[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
g[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
g[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
g[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
g[31] <= and32.DB_MAX_OUTPUT_PORT_TYPE
bit_not[0] <= mux_not:mux_for_not0.port0
bit_not[1] <= mux_not:mux_for_not1.port0
bit_not[2] <= mux_not:mux_for_not2.port0
bit_not[3] <= mux_not:mux_for_not3.port0
bit_not[4] <= mux_not:mux_for_not4.port0
bit_not[5] <= mux_not:mux_for_not5.port0
bit_not[6] <= mux_not:mux_for_not6.port0
bit_not[7] <= mux_not:mux_for_not7.port0
bit_not[8] <= mux_not:mux_for_not8.port0
bit_not[9] <= mux_not:mux_for_not9.port0
bit_not[10] <= mux_not:mux_for_not10.port0
bit_not[11] <= mux_not:mux_for_not11.port0
bit_not[12] <= mux_not:mux_for_not12.port0
bit_not[13] <= mux_not:mux_for_not13.port0
bit_not[14] <= mux_not:mux_for_not14.port0
bit_not[15] <= mux_not:mux_for_not15.port0
bit_not[16] <= mux_not:mux_for_not16.port0
bit_not[17] <= mux_not:mux_for_not17.port0
bit_not[18] <= mux_not:mux_for_not18.port0
bit_not[19] <= mux_not:mux_for_not19.port0
bit_not[20] <= mux_not:mux_for_not20.port0
bit_not[21] <= mux_not:mux_for_not21.port0
bit_not[22] <= mux_not:mux_for_not22.port0
bit_not[23] <= mux_not:mux_for_not23.port0
bit_not[24] <= mux_not:mux_for_not24.port0
bit_not[25] <= mux_not:mux_for_not25.port0
bit_not[26] <= mux_not:mux_for_not26.port0
bit_not[27] <= mux_not:mux_for_not27.port0
bit_not[28] <= mux_not:mux_for_not28.port0
bit_not[29] <= mux_not:mux_for_not29.port0
bit_not[30] <= mux_not:mux_for_not30.port0
bit_not[31] <= mux_not:mux_for_not31.port0
bit1[0] => or1.IN1
bit1[0] => and1.IN1
bit1[1] => or2.IN1
bit1[1] => and2.IN1
bit1[2] => or3.IN1
bit1[2] => and3.IN1
bit1[3] => or4.IN1
bit1[3] => and4.IN1
bit1[4] => or5.IN1
bit1[4] => and5.IN1
bit1[5] => or6.IN1
bit1[5] => and6.IN1
bit1[6] => or7.IN1
bit1[6] => and7.IN1
bit1[7] => or8.IN1
bit1[7] => and8.IN1
bit1[8] => or9.IN1
bit1[8] => and9.IN1
bit1[9] => or10.IN1
bit1[9] => and10.IN1
bit1[10] => or11.IN1
bit1[10] => and11.IN1
bit1[11] => or12.IN1
bit1[11] => and12.IN1
bit1[12] => or13.IN1
bit1[12] => and13.IN1
bit1[13] => or14.IN1
bit1[13] => and14.IN1
bit1[14] => or15.IN1
bit1[14] => and15.IN1
bit1[15] => or16.IN1
bit1[15] => and16.IN1
bit1[16] => or17.IN1
bit1[16] => and17.IN1
bit1[17] => or18.IN1
bit1[17] => and18.IN1
bit1[18] => or19.IN1
bit1[18] => and19.IN1
bit1[19] => or20.IN1
bit1[19] => and20.IN1
bit1[20] => or21.IN1
bit1[20] => and21.IN1
bit1[21] => or22.IN1
bit1[21] => and22.IN1
bit1[22] => or23.IN1
bit1[22] => and23.IN1
bit1[23] => or24.IN1
bit1[23] => and24.IN1
bit1[24] => or25.IN1
bit1[24] => and25.IN1
bit1[25] => or26.IN1
bit1[25] => and26.IN1
bit1[26] => or27.IN1
bit1[26] => and27.IN1
bit1[27] => or28.IN1
bit1[27] => and28.IN1
bit1[28] => or29.IN1
bit1[28] => and29.IN1
bit1[29] => or30.IN1
bit1[29] => and30.IN1
bit1[30] => or31.IN1
bit1[30] => and31.IN1
bit1[31] => or32.IN1
bit1[31] => and32.IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
Alu_Op[0] => Alu_Op[0].IN32
Alu_Op[1] => Alu_Op[1].IN32
Alu_Op[2] => Alu_Op[2].IN32


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not0
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not1
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not2
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not3
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not4
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not5
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not6
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not7
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not8
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not9
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not10
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not11
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not12
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not13
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not14
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not15
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not16
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not17
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not18
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not19
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not20
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not21
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not22
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not23
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not24
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not25
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not26
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not27
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not28
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not29
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not30
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|firstLevel_p_g:p_and_g|mux_not:mux_for_not31
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|mips|full_adder_32bit:addPc|secondLevel_p_g:pAndg
p_secondLevel[0] <= p_1th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[1] <= p_2th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[2] <= p_3th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[3] <= p_4th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[4] <= p_5th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[5] <= p_6th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[6] <= p_7th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[7] <= p_8th_and3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[0] <= g_1t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[1] <= g_2t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[2] <= g_3t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[3] <= g_4t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[4] <= g_5t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[5] <= g_6t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[6] <= g_7t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[7] <= g_8t_or3.DB_MAX_OUTPUT_PORT_TYPE
p[0] => p_1th_and2.IN0
p[1] => p_1th_and2.IN1
p[1] => g_1t_and1.IN0
p[2] => p_1th_and1.IN0
p[3] => p_1th_and1.IN1
p[3] => g_1t_and4.IN0
p[4] => p_2th_and2.IN0
p[5] => p_2th_and2.IN1
p[5] => g_2t_and1.IN0
p[6] => p_2th_and1.IN0
p[7] => p_2th_and1.IN1
p[7] => g_2t_and4.IN0
p[8] => p_3th_and2.IN0
p[9] => p_3th_and2.IN1
p[9] => g_3t_and1.IN0
p[10] => p_3th_and1.IN0
p[11] => p_3th_and1.IN1
p[11] => g_3t_and4.IN0
p[12] => p_4th_and2.IN0
p[13] => p_4th_and2.IN1
p[14] => p_4th_and1.IN0
p[15] => p_4th_and1.IN1
p[15] => g_4t_and4.IN0
p[16] => p_5th_and2.IN0
p[17] => p_5th_and2.IN1
p[18] => p_5th_and1.IN0
p[19] => p_5th_and1.IN1
p[19] => g_5t_and4.IN0
p[20] => p_6th_and2.IN0
p[21] => p_6th_and2.IN1
p[22] => p_6th_and1.IN0
p[23] => p_6th_and1.IN1
p[23] => g_6t_and4.IN0
p[24] => p_7th_and2.IN0
p[25] => p_7th_and2.IN1
p[26] => p_7th_and1.IN0
p[27] => p_7th_and1.IN1
p[27] => g_7t_and4.IN0
p[28] => p_8th_and2.IN0
p[29] => p_8th_and2.IN1
p[30] => p_8th_and1.IN0
p[31] => p_8th_and1.IN1
p[31] => g_8t_and4.IN0
g[0] => g_1t_and1.IN1
g[1] => g_1t_and3.IN1
g[2] => g_1t_and4.IN1
g[3] => g_1t_or1.IN1
g[4] => g_2t_and1.IN1
g[5] => g_2t_and3.IN1
g[6] => g_2t_and4.IN1
g[7] => g_2t_or1.IN1
g[8] => g_3t_and1.IN1
g[9] => g_3t_and3.IN1
g[10] => g_3t_and4.IN1
g[11] => g_3t_or1.IN1
g[12] => ~NO_FANOUT~
g[13] => g_4t_and3.IN1
g[14] => g_4t_and4.IN1
g[15] => g_4t_or1.IN1
g[16] => ~NO_FANOUT~
g[17] => g_5t_and3.IN1
g[18] => g_5t_and4.IN1
g[19] => g_5t_or1.IN1
g[20] => ~NO_FANOUT~
g[21] => g_6t_and3.IN1
g[22] => g_6t_and4.IN1
g[23] => g_6t_or1.IN1
g[24] => ~NO_FANOUT~
g[25] => g_7t_and3.IN1
g[26] => g_7t_and4.IN1
g[27] => g_7t_or1.IN1
g[28] => ~NO_FANOUT~
g[29] => g_8t_and3.IN1
g[30] => g_8t_and4.IN1
g[31] => g_8t_or1.IN1


|mips|full_adder_32bit:addPc|carry_Lookahead_Level2:cl2
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
res[4] <= res_c5.DB_MAX_OUTPUT_PORT_TYPE
res[5] <= res_c6.DB_MAX_OUTPUT_PORT_TYPE
res[6] <= res_c7.DB_MAX_OUTPUT_PORT_TYPE
res[7] <= res_c8.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
p[4] => andPC4.IN1
p[5] => andPC5.IN1
p[6] => andPC6.IN1
p[7] => andPC7.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
g[4] => res_c5.IN1
g[5] => res_c6.IN1
g[6] => res_c7.IN1
g[7] => res_c8.IN1
c_in => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_adder_lastBit:fulladder4.port0
set <= full_adder_lastBit:fulladder4.port1
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN4


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4
result <= mux_3x1:mux.port0
set <= set_set.DB_MAX_OUTPUT_PORT_TYPE
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
c_in => overflow.IN0
c_out => overflow.IN1
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|mips|full_adder_32bit:addPc|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


