module register_block(
    output reg [31:0] read_data1,
    output reg [31:0] read_data2,
    input  [31:0] write_data, 
    input  [4:0] read_reg1,
    input  [4:0] read_reg2,
    input  [4:0] write_reg, 
    input  regWrite
);

    reg [31:0] registers [31:0]; // Define a 32x32 register file
	 reg read;


    initial begin
        $readmemb("registers.mem", registers);
		  read <= 1'b1;
		  
    end
	 
	 
	
	 always @(*) begin
		if(read == 1'b1) begin
		read_data1 = registers[read_reg1];
		read_data2 = registers[read_reg2];
		read = 1'b0;
		$display("%ALOOOOOOOOOOO\n");
		end
		
		
	 end
     

    always @(*) begin
			
			$display("%b-%b fdgdf\n", read_data1, read_data2);
			if(regWrite) begin
			registers[write_reg] = write_data;
			$writememb("registers.mem", registers);
			end
			
			
	 
    end
	 
	 
	
	 
	 
	 
endmodule
