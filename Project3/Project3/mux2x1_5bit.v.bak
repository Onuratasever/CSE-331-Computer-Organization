module mux2x1_5bit (output [4:0] result, input [4:0] result1, input [4:0] result2, input sel);
	
	
wire [4:0] result_1;
wire [4:0] result_2;
wire [4:0] select;
wire [4:0] select_not;
wire sel_not;
	
// Creating 5-bit number using sel bit	
or or2(select[1],sel,sel);
or or3(select[2],sel,sel);
or or4(select[3],sel,sel);
or or5(select[4],sel,sel);
or or1 (select[0], 1'b0, sel);

// Creating 32-bit number using sel-not bit
not not1 (sel_not, sel);
or or6(select_not[1],sel_not,sel_not);
or or7(select_not[2],sel_not,sel_not);
or or8(select_not[3],sel_not,sel_not);
or or9(select_not[4],sel_not,sel_not);
or or10 (select_not[0], 1'b0, sel_not);


and and1(result_1[0],result1[0],select_not[0]);	
and and2(result_1[1],result1[1],select_not[1]);	
and and3(result_1[2],result1[2],select_not[2]);	
and and4(result_1[3],result1[3],select_not[3]);	
and and5(result_1[4],result1[4],select_not[4]);	


and and6(result_2[0],result2[0],select[0]);	
and and7(result_2[1],result2[1],select[1]);	
and and8(result_2[2],result2[2],select[2]);	          
and and9(result_2[3],result2[3],select[3]);	
and and10(result_2[4],result2[4],select[4]);	

or or11(result[0],result_1[0],result_2[0]);	
or or12(result[1],result_1[1],result_2[1]);	
or or13(result[2],result_1[2],result_2[2]);	          
or or14(result[3],result_1[3],result_2[3]);	
or or15(result[4],result_1[4],result_2[4]);	


endmodule
