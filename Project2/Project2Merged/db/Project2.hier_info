|Alu
res[0] <= muxAktar:mux.port3
res[1] <= muxAktar:mux.port3
res[2] <= muxAktar:mux.port3
res[3] <= muxAktar:mux.port3
res[4] <= muxAktar:mux.port3
res[5] <= muxAktar:mux.port3
res[6] <= muxAktar:mux.port3
res[7] <= muxAktar:mux.port3
res[8] <= muxAktar:mux.port3
res[9] <= muxAktar:mux.port3
res[10] <= muxAktar:mux.port3
res[11] <= muxAktar:mux.port3
res[12] <= muxAktar:mux.port3
res[13] <= muxAktar:mux.port3
res[14] <= muxAktar:mux.port3
res[15] <= muxAktar:mux.port3
res[16] <= muxAktar:mux.port3
res[17] <= muxAktar:mux.port3
res[18] <= muxAktar:mux.port3
res[19] <= muxAktar:mux.port3
res[20] <= muxAktar:mux.port3
res[21] <= muxAktar:mux.port3
res[22] <= muxAktar:mux.port3
res[23] <= muxAktar:mux.port3
res[24] <= muxAktar:mux.port3
res[25] <= muxAktar:mux.port3
res[26] <= muxAktar:mux.port3
res[27] <= muxAktar:mux.port3
res[28] <= muxAktar:mux.port3
res[29] <= muxAktar:mux.port3
res[30] <= muxAktar:mux.port3
res[31] <= muxAktar:mux.port3
cout <= full_adder_32bit:fa1.port1
bit1[0] => bit1[0].IN2
bit1[1] => bit1[1].IN2
bit1[2] => bit1[2].IN2
bit1[3] => bit1[3].IN2
bit1[4] => bit1[4].IN2
bit1[5] => bit1[5].IN2
bit1[6] => bit1[6].IN2
bit1[7] => bit1[7].IN2
bit1[8] => bit1[8].IN2
bit1[9] => bit1[9].IN2
bit1[10] => bit1[10].IN2
bit1[11] => bit1[11].IN2
bit1[12] => bit1[12].IN2
bit1[13] => bit1[13].IN2
bit1[14] => bit1[14].IN2
bit1[15] => bit1[15].IN2
bit1[16] => bit1[16].IN2
bit1[17] => bit1[17].IN2
bit1[18] => bit1[18].IN2
bit1[19] => bit1[19].IN2
bit1[20] => bit1[20].IN2
bit1[21] => bit1[21].IN2
bit1[22] => bit1[22].IN2
bit1[23] => bit1[23].IN2
bit1[24] => bit1[24].IN2
bit1[25] => bit1[25].IN2
bit1[26] => bit1[26].IN2
bit1[27] => bit1[27].IN2
bit1[28] => bit1[28].IN2
bit1[29] => bit1[29].IN2
bit1[30] => bit1[30].IN2
bit1[31] => bit1[31].IN2
bit2[0] => bit2[0].IN2
bit2[1] => bit2[1].IN2
bit2[2] => bit2[2].IN2
bit2[3] => bit2[3].IN2
bit2[4] => bit2[4].IN2
bit2[5] => bit2[5].IN2
bit2[6] => bit2[6].IN2
bit2[7] => bit2[7].IN2
bit2[8] => bit2[8].IN2
bit2[9] => bit2[9].IN2
bit2[10] => bit2[10].IN2
bit2[11] => bit2[11].IN2
bit2[12] => bit2[12].IN2
bit2[13] => bit2[13].IN2
bit2[14] => bit2[14].IN2
bit2[15] => bit2[15].IN2
bit2[16] => bit2[16].IN2
bit2[17] => bit2[17].IN2
bit2[18] => bit2[18].IN2
bit2[19] => bit2[19].IN2
bit2[20] => bit2[20].IN2
bit2[21] => bit2[21].IN2
bit2[22] => bit2[22].IN2
bit2[23] => bit2[23].IN2
bit2[24] => bit2[24].IN2
bit2[25] => bit2[25].IN2
bit2[26] => bit2[26].IN2
bit2[27] => bit2[27].IN2
bit2[28] => bit2[28].IN2
bit2[29] => bit2[29].IN2
bit2[30] => bit2[30].IN2
bit2[31] => bit2[31].IN2
c_in => ~NO_FANOUT~
Alu_Op[0] => Alu_Op[0].IN2
Alu_Op[1] => Alu_Op[1].IN2
Alu_Op[2] => Alu_Op[2].IN2
CLK => CLK.IN1
reset => reset.IN1


|Alu|full_adder_32bit:fa1
res[0] <= full_adder_4bit:fullader1.port0
res[1] <= full_adder_4bit:fullader1.port0
res[2] <= full_adder_4bit:fullader1.port0
res[3] <= full_adder_4bit:fullader1.port0
res[4] <= full_adder_4bit:fullader2.port0
res[5] <= full_adder_4bit:fullader2.port0
res[6] <= full_adder_4bit:fullader2.port0
res[7] <= full_adder_4bit:fullader2.port0
res[8] <= full_adder_4bit:fullader3.port0
res[9] <= full_adder_4bit:fullader3.port0
res[10] <= full_adder_4bit:fullader3.port0
res[11] <= full_adder_4bit:fullader3.port0
res[12] <= full_adder_4bit:fullader4.port0
res[13] <= full_adder_4bit:fullader4.port0
res[14] <= full_adder_4bit:fullader4.port0
res[15] <= full_adder_4bit:fullader4.port0
res[16] <= full_adder_4bit:fullader5.port0
res[17] <= full_adder_4bit:fullader5.port0
res[18] <= full_adder_4bit:fullader5.port0
res[19] <= full_adder_4bit:fullader5.port0
res[20] <= full_adder_4bit:fullader6.port0
res[21] <= full_adder_4bit:fullader6.port0
res[22] <= full_adder_4bit:fullader6.port0
res[23] <= full_adder_4bit:fullader6.port0
res[24] <= full_adder_4bit:fullader7.port0
res[25] <= full_adder_4bit:fullader7.port0
res[26] <= full_adder_4bit:fullader7.port0
res[27] <= full_adder_4bit:fullader7.port0
res[28] <= full_adder_4bit_lastBlock:fullader8.port0
res[29] <= full_adder_4bit_lastBlock:fullader8.port0
res[30] <= full_adder_4bit_lastBlock:fullader8.port0
res[31] <= full_adder_4bit_lastBlock:fullader8.port0
cout <= carry_Lookahead_Level2:cl2.port0
bit1[0] => bit1[0].IN2
bit1[1] => bit1[1].IN2
bit1[2] => bit1[2].IN2
bit1[3] => bit1[3].IN2
bit1[4] => bit1[4].IN2
bit1[5] => bit1[5].IN2
bit1[6] => bit1[6].IN2
bit1[7] => bit1[7].IN2
bit1[8] => bit1[8].IN2
bit1[9] => bit1[9].IN2
bit1[10] => bit1[10].IN2
bit1[11] => bit1[11].IN2
bit1[12] => bit1[12].IN2
bit1[13] => bit1[13].IN2
bit1[14] => bit1[14].IN2
bit1[15] => bit1[15].IN2
bit1[16] => bit1[16].IN2
bit1[17] => bit1[17].IN2
bit1[18] => bit1[18].IN2
bit1[19] => bit1[19].IN2
bit1[20] => bit1[20].IN2
bit1[21] => bit1[21].IN2
bit1[22] => bit1[22].IN2
bit1[23] => bit1[23].IN2
bit1[24] => bit1[24].IN2
bit1[25] => bit1[25].IN2
bit1[26] => bit1[26].IN2
bit1[27] => bit1[27].IN2
bit1[28] => bit1[28].IN2
bit1[29] => bit1[29].IN2
bit1[30] => bit1[30].IN2
bit1[31] => bit1[31].IN2
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
c_in => ~NO_FANOUT~
Alu_Op[0] => Alu_Op[0].IN9
Alu_Op[1] => Alu_Op[1].IN9
Alu_Op[2] => Alu_Op[2].IN9


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g
p[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
p[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
p[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
p[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
p[5] <= or6.DB_MAX_OUTPUT_PORT_TYPE
p[6] <= or7.DB_MAX_OUTPUT_PORT_TYPE
p[7] <= or8.DB_MAX_OUTPUT_PORT_TYPE
p[8] <= or9.DB_MAX_OUTPUT_PORT_TYPE
p[9] <= or10.DB_MAX_OUTPUT_PORT_TYPE
p[10] <= or11.DB_MAX_OUTPUT_PORT_TYPE
p[11] <= or12.DB_MAX_OUTPUT_PORT_TYPE
p[12] <= or13.DB_MAX_OUTPUT_PORT_TYPE
p[13] <= or14.DB_MAX_OUTPUT_PORT_TYPE
p[14] <= or15.DB_MAX_OUTPUT_PORT_TYPE
p[15] <= or16.DB_MAX_OUTPUT_PORT_TYPE
p[16] <= or17.DB_MAX_OUTPUT_PORT_TYPE
p[17] <= or18.DB_MAX_OUTPUT_PORT_TYPE
p[18] <= or19.DB_MAX_OUTPUT_PORT_TYPE
p[19] <= or20.DB_MAX_OUTPUT_PORT_TYPE
p[20] <= or21.DB_MAX_OUTPUT_PORT_TYPE
p[21] <= or22.DB_MAX_OUTPUT_PORT_TYPE
p[22] <= or23.DB_MAX_OUTPUT_PORT_TYPE
p[23] <= or24.DB_MAX_OUTPUT_PORT_TYPE
p[24] <= or25.DB_MAX_OUTPUT_PORT_TYPE
p[25] <= or26.DB_MAX_OUTPUT_PORT_TYPE
p[26] <= or27.DB_MAX_OUTPUT_PORT_TYPE
p[27] <= or28.DB_MAX_OUTPUT_PORT_TYPE
p[28] <= or29.DB_MAX_OUTPUT_PORT_TYPE
p[29] <= or30.DB_MAX_OUTPUT_PORT_TYPE
p[30] <= or31.DB_MAX_OUTPUT_PORT_TYPE
p[31] <= or32.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
g[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
g[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
g[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
g[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
g[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
g[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
g[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
g[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
g[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
g[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
g[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
g[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
g[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
g[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
g[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
g[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
g[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
g[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
g[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
g[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
g[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
g[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
g[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
g[31] <= and32.DB_MAX_OUTPUT_PORT_TYPE
bit_not[0] <= mux_not:mux_for_not0.port0
bit_not[1] <= mux_not:mux_for_not1.port0
bit_not[2] <= mux_not:mux_for_not2.port0
bit_not[3] <= mux_not:mux_for_not3.port0
bit_not[4] <= mux_not:mux_for_not4.port0
bit_not[5] <= mux_not:mux_for_not5.port0
bit_not[6] <= mux_not:mux_for_not6.port0
bit_not[7] <= mux_not:mux_for_not7.port0
bit_not[8] <= mux_not:mux_for_not8.port0
bit_not[9] <= mux_not:mux_for_not9.port0
bit_not[10] <= mux_not:mux_for_not10.port0
bit_not[11] <= mux_not:mux_for_not11.port0
bit_not[12] <= mux_not:mux_for_not12.port0
bit_not[13] <= mux_not:mux_for_not13.port0
bit_not[14] <= mux_not:mux_for_not14.port0
bit_not[15] <= mux_not:mux_for_not15.port0
bit_not[16] <= mux_not:mux_for_not16.port0
bit_not[17] <= mux_not:mux_for_not17.port0
bit_not[18] <= mux_not:mux_for_not18.port0
bit_not[19] <= mux_not:mux_for_not19.port0
bit_not[20] <= mux_not:mux_for_not20.port0
bit_not[21] <= mux_not:mux_for_not21.port0
bit_not[22] <= mux_not:mux_for_not22.port0
bit_not[23] <= mux_not:mux_for_not23.port0
bit_not[24] <= mux_not:mux_for_not24.port0
bit_not[25] <= mux_not:mux_for_not25.port0
bit_not[26] <= mux_not:mux_for_not26.port0
bit_not[27] <= mux_not:mux_for_not27.port0
bit_not[28] <= mux_not:mux_for_not28.port0
bit_not[29] <= mux_not:mux_for_not29.port0
bit_not[30] <= mux_not:mux_for_not30.port0
bit_not[31] <= mux_not:mux_for_not31.port0
bit1[0] => or1.IN1
bit1[0] => and1.IN1
bit1[1] => or2.IN1
bit1[1] => and2.IN1
bit1[2] => or3.IN1
bit1[2] => and3.IN1
bit1[3] => or4.IN1
bit1[3] => and4.IN1
bit1[4] => or5.IN1
bit1[4] => and5.IN1
bit1[5] => or6.IN1
bit1[5] => and6.IN1
bit1[6] => or7.IN1
bit1[6] => and7.IN1
bit1[7] => or8.IN1
bit1[7] => and8.IN1
bit1[8] => or9.IN1
bit1[8] => and9.IN1
bit1[9] => or10.IN1
bit1[9] => and10.IN1
bit1[10] => or11.IN1
bit1[10] => and11.IN1
bit1[11] => or12.IN1
bit1[11] => and12.IN1
bit1[12] => or13.IN1
bit1[12] => and13.IN1
bit1[13] => or14.IN1
bit1[13] => and14.IN1
bit1[14] => or15.IN1
bit1[14] => and15.IN1
bit1[15] => or16.IN1
bit1[15] => and16.IN1
bit1[16] => or17.IN1
bit1[16] => and17.IN1
bit1[17] => or18.IN1
bit1[17] => and18.IN1
bit1[18] => or19.IN1
bit1[18] => and19.IN1
bit1[19] => or20.IN1
bit1[19] => and20.IN1
bit1[20] => or21.IN1
bit1[20] => and21.IN1
bit1[21] => or22.IN1
bit1[21] => and22.IN1
bit1[22] => or23.IN1
bit1[22] => and23.IN1
bit1[23] => or24.IN1
bit1[23] => and24.IN1
bit1[24] => or25.IN1
bit1[24] => and25.IN1
bit1[25] => or26.IN1
bit1[25] => and26.IN1
bit1[26] => or27.IN1
bit1[26] => and27.IN1
bit1[27] => or28.IN1
bit1[27] => and28.IN1
bit1[28] => or29.IN1
bit1[28] => and29.IN1
bit1[29] => or30.IN1
bit1[29] => and30.IN1
bit1[30] => or31.IN1
bit1[30] => and31.IN1
bit1[31] => or32.IN1
bit1[31] => and32.IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
bit2[4] => bit2[4].IN1
bit2[5] => bit2[5].IN1
bit2[6] => bit2[6].IN1
bit2[7] => bit2[7].IN1
bit2[8] => bit2[8].IN1
bit2[9] => bit2[9].IN1
bit2[10] => bit2[10].IN1
bit2[11] => bit2[11].IN1
bit2[12] => bit2[12].IN1
bit2[13] => bit2[13].IN1
bit2[14] => bit2[14].IN1
bit2[15] => bit2[15].IN1
bit2[16] => bit2[16].IN1
bit2[17] => bit2[17].IN1
bit2[18] => bit2[18].IN1
bit2[19] => bit2[19].IN1
bit2[20] => bit2[20].IN1
bit2[21] => bit2[21].IN1
bit2[22] => bit2[22].IN1
bit2[23] => bit2[23].IN1
bit2[24] => bit2[24].IN1
bit2[25] => bit2[25].IN1
bit2[26] => bit2[26].IN1
bit2[27] => bit2[27].IN1
bit2[28] => bit2[28].IN1
bit2[29] => bit2[29].IN1
bit2[30] => bit2[30].IN1
bit2[31] => bit2[31].IN1
Alu_Op[0] => Alu_Op[0].IN32
Alu_Op[1] => Alu_Op[1].IN32
Alu_Op[2] => Alu_Op[2].IN32


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not0
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not1
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not2
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not3
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not4
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not5
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not6
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not7
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not8
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not9
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not10
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not11
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not12
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not13
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not14
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not15
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not16
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not17
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not18
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not19
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not20
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not21
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not22
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not23
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not24
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not25
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not26
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not27
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not28
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not29
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not30
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|firstLevel_p_g:p_and_g|mux_not:mux_for_not31
bit2_xor <= result.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => andformod2.IN1
Alu_Op[0] => andforlessThan2.IN1
Alu_Op[0] => andforsub2.IN1
Alu_Op[1] => andforsub1.IN0
Alu_Op[1] => andformod1.IN0
Alu_Op[1] => andforlessThan1.IN0
Alu_Op[2] => andforlessThan1.IN1
Alu_Op[2] => andforsub1.IN1
Alu_Op[2] => andformod1.IN1
bit2 => andFordecide2.IN1
bit2 => andFordecide1.IN1


|Alu|full_adder_32bit:fa1|secondLevel_p_g:pAndg
p_secondLevel[0] <= p_1th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[1] <= p_2th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[2] <= p_3th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[3] <= p_4th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[4] <= p_5th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[5] <= p_6th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[6] <= p_7th_and3.DB_MAX_OUTPUT_PORT_TYPE
p_secondLevel[7] <= p_8th_and3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[0] <= g_1t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[1] <= g_2t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[2] <= g_3t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[3] <= g_4t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[4] <= g_5t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[5] <= g_6t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[6] <= g_7t_or3.DB_MAX_OUTPUT_PORT_TYPE
g_secondLevel[7] <= g_8t_or3.DB_MAX_OUTPUT_PORT_TYPE
p[0] => p_1th_and2.IN0
p[1] => p_1th_and2.IN1
p[1] => g_1t_and1.IN0
p[2] => p_1th_and1.IN0
p[3] => p_1th_and1.IN1
p[3] => g_1t_and4.IN0
p[4] => p_2th_and2.IN0
p[5] => p_2th_and2.IN1
p[5] => g_2t_and1.IN0
p[6] => p_2th_and1.IN0
p[7] => p_2th_and1.IN1
p[7] => g_2t_and4.IN0
p[8] => p_3th_and2.IN0
p[9] => p_3th_and2.IN1
p[9] => g_3t_and1.IN0
p[10] => p_3th_and1.IN0
p[11] => p_3th_and1.IN1
p[11] => g_3t_and4.IN0
p[12] => p_4th_and2.IN0
p[13] => p_4th_and2.IN1
p[14] => p_4th_and1.IN0
p[15] => p_4th_and1.IN1
p[15] => g_4t_and4.IN0
p[16] => p_5th_and2.IN0
p[17] => p_5th_and2.IN1
p[18] => p_5th_and1.IN0
p[19] => p_5th_and1.IN1
p[19] => g_5t_and4.IN0
p[20] => p_6th_and2.IN0
p[21] => p_6th_and2.IN1
p[22] => p_6th_and1.IN0
p[23] => p_6th_and1.IN1
p[23] => g_6t_and4.IN0
p[24] => p_7th_and2.IN0
p[25] => p_7th_and2.IN1
p[26] => p_7th_and1.IN0
p[27] => p_7th_and1.IN1
p[27] => g_7t_and4.IN0
p[28] => p_8th_and2.IN0
p[29] => p_8th_and2.IN1
p[30] => p_8th_and1.IN0
p[31] => p_8th_and1.IN1
p[31] => g_8t_and4.IN0
g[0] => g_1t_and1.IN1
g[1] => g_1t_and3.IN1
g[2] => g_1t_and4.IN1
g[3] => g_1t_or1.IN1
g[4] => g_2t_and1.IN1
g[5] => g_2t_and3.IN1
g[6] => g_2t_and4.IN1
g[7] => g_2t_or1.IN1
g[8] => g_3t_and1.IN1
g[9] => g_3t_and3.IN1
g[10] => g_3t_and4.IN1
g[11] => g_3t_or1.IN1
g[12] => ~NO_FANOUT~
g[13] => g_4t_and3.IN1
g[14] => g_4t_and4.IN1
g[15] => g_4t_or1.IN1
g[16] => ~NO_FANOUT~
g[17] => g_5t_and3.IN1
g[18] => g_5t_and4.IN1
g[19] => g_5t_or1.IN1
g[20] => ~NO_FANOUT~
g[21] => g_6t_and3.IN1
g[22] => g_6t_and4.IN1
g[23] => g_6t_or1.IN1
g[24] => ~NO_FANOUT~
g[25] => g_7t_and3.IN1
g[26] => g_7t_and4.IN1
g[27] => g_7t_or1.IN1
g[28] => ~NO_FANOUT~
g[29] => g_8t_and3.IN1
g[30] => g_8t_and4.IN1
g[31] => g_8t_or1.IN1


|Alu|full_adder_32bit:fa1|carry_Lookahead_Level2:cl2
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
res[4] <= res_c5.DB_MAX_OUTPUT_PORT_TYPE
res[5] <= res_c6.DB_MAX_OUTPUT_PORT_TYPE
res[6] <= res_c7.DB_MAX_OUTPUT_PORT_TYPE
res[7] <= res_c8.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
p[4] => andPC4.IN1
p[5] => andPC5.IN1
p[6] => andPC6.IN1
p[7] => andPC7.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
g[4] => res_c5.IN1
g[5] => res_c6.IN1
g[6] => res_c7.IN1
g[7] => res_c8.IN1
c_in => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader2|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader3|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader4|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader5|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader6|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader7|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_adder_lastBit:fulladder4.port0
set <= full_adder_lastBit:fulladder4.port1
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN4


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4
result <= mux_3x1:mux.port0
set <= set_set.DB_MAX_OUTPUT_PORT_TYPE
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
c_in => overflow.IN0
c_out => overflow.IN1
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_adder_lastBit:fulladder4|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit_lastBlock:fullader8|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1
res[0] <= full_Adder_1bit:fulladderA.port0
res[1] <= full_Adder_1bit:fulladderB.port0
res[2] <= full_Adder_1bit:fulladderC.port0
res[3] <= full_Adder_1bit:fulladderD.port0
bit1[0] => bit1[0].IN1
bit1[1] => bit1[1].IN1
bit1[2] => bit1[2].IN1
bit1[3] => bit1[3].IN1
bit2[0] => bit2[0].IN1
bit2[1] => bit2[1].IN1
bit2[2] => bit2[2].IN1
bit2[3] => bit2[3].IN1
c_in => c_in.IN2
Alu_Op[0] => Alu_Op[0].IN4
Alu_Op[1] => Alu_Op[1].IN4
Alu_Op[2] => Alu_Op[2].IN4
p[0] => p[0].IN1
p[1] => p[1].IN1
p[2] => p[2].IN1
p[3] => p[3].IN1
g[0] => g[0].IN1
g[1] => g[1].IN1
g[2] => g[2].IN1
g[3] => g[3].IN1
less => less.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|carry_Lookahead_Level1:cl1
res[0] <= res_c1.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res_c2.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= res_c3.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= res_c4.DB_MAX_OUTPUT_PORT_TYPE
p[0] => andPC0.IN0
p[1] => andPC1.IN1
p[2] => andPC2.IN1
p[3] => andPC3.IN1
g[0] => res_c1.IN1
g[1] => res_c2.IN1
g[2] => res_c3.IN1
g[3] => res_c4.IN1
c_in1 => andPC0.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderB|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderC|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderD|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA
result <= mux_3x1:mux.port0
bit1 => and1.IN0
bit1 => or1.IN0
bit2 => and1.IN1
bit2 => or1.IN1
c_in => and3.IN0
c_in => or2.IN0
less => operations[4].IN1
Alu_Op[0] => Alu_Op[0].IN1
Alu_Op[1] => Alu_Op[1].IN1
Alu_Op[2] => Alu_Op[2].IN1


|Alu|full_adder_32bit:fa1|full_adder_4bit:fullader1|full_Adder_1bit:fulladderA|mux_3x1:mux
result <= lastOr.DB_MAX_OUTPUT_PORT_TYPE
Alu_Op[0] => and_of_or2.IN0
Alu_Op[0] => and_of_nor2.IN0
Alu_Op[0] => and_of_add2.IN0
Alu_Op[0] => and_of_mod2.IN0
Alu_Op[0] => and_of_and2.IN0
Alu_Op[0] => and_of_xor2.IN0
Alu_Op[0] => and_of_lessThan2.IN0
Alu_Op[0] => and_of_sub2.IN0
Alu_Op[1] => and_of_xor2.IN1
Alu_Op[1] => and_of_nor2.IN1
Alu_Op[1] => and_of_sub2.IN1
Alu_Op[1] => and_of_mod2.IN1
Alu_Op[1] => and_of_and2.IN1
Alu_Op[1] => and_of_or2.IN1
Alu_Op[1] => and_of_lessThan2.IN1
Alu_Op[1] => and_of_add2.IN1
Alu_Op[2] => and_of_lessThan1.IN0
Alu_Op[2] => and_of_add1.IN0
Alu_Op[2] => and_of_sub1.IN0
Alu_Op[2] => and_of_mod1.IN0
Alu_Op[2] => and_of_and1.IN0
Alu_Op[2] => and_of_or1.IN0
Alu_Op[2] => and_of_xor1.IN0
Alu_Op[2] => and_of_nor1.IN0
res[0] => and_of_and1.IN1
res[1] => and_of_or1.IN1
res[2] => and_of_xor1.IN1
res[3] => and_of_nor1.IN1
res[4] => and_of_lessThan1.IN1
res[5] => and_of_add1.IN1
res[5] => and_of_sub1.IN1
res[6] => ~NO_FANOUT~
res[7] => and_of_mod1.IN1


|Alu|mod:mod1
clk => clk.IN2
reset => reset.IN2
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1
mod_result[0] <= mod_dp:data_path_unit.result
mod_result[1] <= mod_dp:data_path_unit.result
mod_result[2] <= mod_dp:data_path_unit.result
mod_result[3] <= mod_dp:data_path_unit.result
mod_result[4] <= mod_dp:data_path_unit.result
mod_result[5] <= mod_dp:data_path_unit.result
mod_result[6] <= mod_dp:data_path_unit.result
mod_result[7] <= mod_dp:data_path_unit.result
mod_result[8] <= mod_dp:data_path_unit.result
mod_result[9] <= mod_dp:data_path_unit.result
mod_result[10] <= mod_dp:data_path_unit.result
mod_result[11] <= mod_dp:data_path_unit.result
mod_result[12] <= mod_dp:data_path_unit.result
mod_result[13] <= mod_dp:data_path_unit.result
mod_result[14] <= mod_dp:data_path_unit.result
mod_result[15] <= mod_dp:data_path_unit.result
mod_result[16] <= mod_dp:data_path_unit.result
mod_result[17] <= mod_dp:data_path_unit.result
mod_result[18] <= mod_dp:data_path_unit.result
mod_result[19] <= mod_dp:data_path_unit.result
mod_result[20] <= mod_dp:data_path_unit.result
mod_result[21] <= mod_dp:data_path_unit.result
mod_result[22] <= mod_dp:data_path_unit.result
mod_result[23] <= mod_dp:data_path_unit.result
mod_result[24] <= mod_dp:data_path_unit.result
mod_result[25] <= mod_dp:data_path_unit.result
mod_result[26] <= mod_dp:data_path_unit.result
mod_result[27] <= mod_dp:data_path_unit.result
mod_result[28] <= mod_dp:data_path_unit.result
mod_result[29] <= mod_dp:data_path_unit.result
mod_result[30] <= mod_dp:data_path_unit.result
mod_result[31] <= mod_dp:data_path_unit.result


|Alu|mod:mod1|mod_cu:control_unit
clk => write_temp~reg0.CLK
clk => write_result~reg0.CLK
clk => state~1.DATAIN
reset => write_temp~reg0.ACLR
reset => write_result~reg0.ACLR
reset => state~3.DATAIN
in_lt => Selector0.IN1
in_lt => Selector1.IN1
write_result <= write_result~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_temp <= write_temp~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Alu|mod:mod1|mod_dp:data_path_unit
clk => result[0]~reg0.CLK
clk => result[1]~reg0.CLK
clk => result[2]~reg0.CLK
clk => result[3]~reg0.CLK
clk => result[4]~reg0.CLK
clk => result[5]~reg0.CLK
clk => result[6]~reg0.CLK
clk => result[7]~reg0.CLK
clk => result[8]~reg0.CLK
clk => result[9]~reg0.CLK
clk => result[10]~reg0.CLK
clk => result[11]~reg0.CLK
clk => result[12]~reg0.CLK
clk => result[13]~reg0.CLK
clk => result[14]~reg0.CLK
clk => result[15]~reg0.CLK
clk => result[16]~reg0.CLK
clk => result[17]~reg0.CLK
clk => result[18]~reg0.CLK
clk => result[19]~reg0.CLK
clk => result[20]~reg0.CLK
clk => result[21]~reg0.CLK
clk => result[22]~reg0.CLK
clk => result[23]~reg0.CLK
clk => result[24]~reg0.CLK
clk => result[25]~reg0.CLK
clk => result[26]~reg0.CLK
clk => result[27]~reg0.CLK
clk => result[28]~reg0.CLK
clk => result[29]~reg0.CLK
clk => result[30]~reg0.CLK
clk => result[31]~reg0.CLK
clk => Temp[0].CLK
clk => Temp[1].CLK
clk => Temp[2].CLK
clk => Temp[3].CLK
clk => Temp[4].CLK
clk => Temp[5].CLK
clk => Temp[6].CLK
clk => Temp[7].CLK
clk => Temp[8].CLK
clk => Temp[9].CLK
clk => Temp[10].CLK
clk => Temp[11].CLK
clk => Temp[12].CLK
clk => Temp[13].CLK
clk => Temp[14].CLK
clk => Temp[15].CLK
clk => Temp[16].CLK
clk => Temp[17].CLK
clk => Temp[18].CLK
clk => Temp[19].CLK
clk => Temp[20].CLK
clk => Temp[21].CLK
clk => Temp[22].CLK
clk => Temp[23].CLK
clk => Temp[24].CLK
clk => Temp[25].CLK
clk => Temp[26].CLK
clk => Temp[27].CLK
clk => Temp[28].CLK
clk => Temp[29].CLK
clk => Temp[30].CLK
clk => Temp[31].CLK
clk => out_lt~reg0.CLK
reset => result[0]~reg0.ACLR
reset => result[1]~reg0.ACLR
reset => result[2]~reg0.ACLR
reset => result[3]~reg0.ACLR
reset => result[4]~reg0.ACLR
reset => result[5]~reg0.ACLR
reset => result[6]~reg0.ACLR
reset => result[7]~reg0.ACLR
reset => result[8]~reg0.ACLR
reset => result[9]~reg0.ACLR
reset => result[10]~reg0.ACLR
reset => result[11]~reg0.ACLR
reset => result[12]~reg0.ACLR
reset => result[13]~reg0.ACLR
reset => result[14]~reg0.ACLR
reset => result[15]~reg0.ACLR
reset => result[16]~reg0.ACLR
reset => result[17]~reg0.ACLR
reset => result[18]~reg0.ACLR
reset => result[19]~reg0.ACLR
reset => result[20]~reg0.ACLR
reset => result[21]~reg0.ACLR
reset => result[22]~reg0.ACLR
reset => result[23]~reg0.ACLR
reset => result[24]~reg0.ACLR
reset => result[25]~reg0.ACLR
reset => result[26]~reg0.ACLR
reset => result[27]~reg0.ACLR
reset => result[28]~reg0.ACLR
reset => result[29]~reg0.ACLR
reset => result[30]~reg0.ACLR
reset => result[31]~reg0.ACLR
reset => Temp[0].ALOAD
reset => Temp[1].ALOAD
reset => Temp[2].ALOAD
reset => Temp[3].ALOAD
reset => Temp[4].ALOAD
reset => Temp[5].ALOAD
reset => Temp[6].ALOAD
reset => Temp[7].ALOAD
reset => Temp[8].ALOAD
reset => Temp[9].ALOAD
reset => Temp[10].ALOAD
reset => Temp[11].ALOAD
reset => Temp[12].ALOAD
reset => Temp[13].ALOAD
reset => Temp[14].ALOAD
reset => Temp[15].ALOAD
reset => Temp[16].ALOAD
reset => Temp[17].ALOAD
reset => Temp[18].ALOAD
reset => Temp[19].ALOAD
reset => Temp[20].ALOAD
reset => Temp[21].ALOAD
reset => Temp[22].ALOAD
reset => Temp[23].ALOAD
reset => Temp[24].ALOAD
reset => Temp[25].ALOAD
reset => Temp[26].ALOAD
reset => Temp[27].ALOAD
reset => Temp[28].ALOAD
reset => Temp[29].ALOAD
reset => Temp[30].ALOAD
reset => Temp[31].ALOAD
reset => out_lt~reg0.ALOAD
A[0] => LessThan0.IN32
A[0] => Temp[0].ADATA
A[1] => LessThan0.IN31
A[1] => Temp[1].ADATA
A[2] => LessThan0.IN30
A[2] => Temp[2].ADATA
A[3] => LessThan0.IN29
A[3] => Temp[3].ADATA
A[4] => LessThan0.IN28
A[4] => Temp[4].ADATA
A[5] => LessThan0.IN27
A[5] => Temp[5].ADATA
A[6] => LessThan0.IN26
A[6] => Temp[6].ADATA
A[7] => LessThan0.IN25
A[7] => Temp[7].ADATA
A[8] => LessThan0.IN24
A[8] => Temp[8].ADATA
A[9] => LessThan0.IN23
A[9] => Temp[9].ADATA
A[10] => LessThan0.IN22
A[10] => Temp[10].ADATA
A[11] => LessThan0.IN21
A[11] => Temp[11].ADATA
A[12] => LessThan0.IN20
A[12] => Temp[12].ADATA
A[13] => LessThan0.IN19
A[13] => Temp[13].ADATA
A[14] => LessThan0.IN18
A[14] => Temp[14].ADATA
A[15] => LessThan0.IN17
A[15] => Temp[15].ADATA
A[16] => LessThan0.IN16
A[16] => Temp[16].ADATA
A[17] => LessThan0.IN15
A[17] => Temp[17].ADATA
A[18] => LessThan0.IN14
A[18] => Temp[18].ADATA
A[19] => LessThan0.IN13
A[19] => Temp[19].ADATA
A[20] => LessThan0.IN12
A[20] => Temp[20].ADATA
A[21] => LessThan0.IN11
A[21] => Temp[21].ADATA
A[22] => LessThan0.IN10
A[22] => Temp[22].ADATA
A[23] => LessThan0.IN9
A[23] => Temp[23].ADATA
A[24] => LessThan0.IN8
A[24] => Temp[24].ADATA
A[25] => LessThan0.IN7
A[25] => Temp[25].ADATA
A[26] => LessThan0.IN6
A[26] => Temp[26].ADATA
A[27] => LessThan0.IN5
A[27] => Temp[27].ADATA
A[28] => LessThan0.IN4
A[28] => Temp[28].ADATA
A[29] => LessThan0.IN3
A[29] => Temp[29].ADATA
A[30] => LessThan0.IN2
A[30] => Temp[30].ADATA
A[31] => LessThan0.IN1
A[31] => Temp[31].ADATA
B[0] => LessThan0.IN64
B[0] => LessThan1.IN64
B[0] => Add0.IN32
B[1] => LessThan0.IN63
B[1] => LessThan1.IN63
B[1] => Add0.IN31
B[2] => LessThan0.IN62
B[2] => LessThan1.IN62
B[2] => Add0.IN30
B[3] => LessThan0.IN61
B[3] => LessThan1.IN61
B[3] => Add0.IN29
B[4] => LessThan0.IN60
B[4] => LessThan1.IN60
B[4] => Add0.IN28
B[5] => LessThan0.IN59
B[5] => LessThan1.IN59
B[5] => Add0.IN27
B[6] => LessThan0.IN58
B[6] => LessThan1.IN58
B[6] => Add0.IN26
B[7] => LessThan0.IN57
B[7] => LessThan1.IN57
B[7] => Add0.IN25
B[8] => LessThan0.IN56
B[8] => LessThan1.IN56
B[8] => Add0.IN24
B[9] => LessThan0.IN55
B[9] => LessThan1.IN55
B[9] => Add0.IN23
B[10] => LessThan0.IN54
B[10] => LessThan1.IN54
B[10] => Add0.IN22
B[11] => LessThan0.IN53
B[11] => LessThan1.IN53
B[11] => Add0.IN21
B[12] => LessThan0.IN52
B[12] => LessThan1.IN52
B[12] => Add0.IN20
B[13] => LessThan0.IN51
B[13] => LessThan1.IN51
B[13] => Add0.IN19
B[14] => LessThan0.IN50
B[14] => LessThan1.IN50
B[14] => Add0.IN18
B[15] => LessThan0.IN49
B[15] => LessThan1.IN49
B[15] => Add0.IN17
B[16] => LessThan0.IN48
B[16] => LessThan1.IN48
B[16] => Add0.IN16
B[17] => LessThan0.IN47
B[17] => LessThan1.IN47
B[17] => Add0.IN15
B[18] => LessThan0.IN46
B[18] => LessThan1.IN46
B[18] => Add0.IN14
B[19] => LessThan0.IN45
B[19] => LessThan1.IN45
B[19] => Add0.IN13
B[20] => LessThan0.IN44
B[20] => LessThan1.IN44
B[20] => Add0.IN12
B[21] => LessThan0.IN43
B[21] => LessThan1.IN43
B[21] => Add0.IN11
B[22] => LessThan0.IN42
B[22] => LessThan1.IN42
B[22] => Add0.IN10
B[23] => LessThan0.IN41
B[23] => LessThan1.IN41
B[23] => Add0.IN9
B[24] => LessThan0.IN40
B[24] => LessThan1.IN40
B[24] => Add0.IN8
B[25] => LessThan0.IN39
B[25] => LessThan1.IN39
B[25] => Add0.IN7
B[26] => LessThan0.IN38
B[26] => LessThan1.IN38
B[26] => Add0.IN6
B[27] => LessThan0.IN37
B[27] => LessThan1.IN37
B[27] => Add0.IN5
B[28] => LessThan0.IN36
B[28] => LessThan1.IN36
B[28] => Add0.IN4
B[29] => LessThan0.IN35
B[29] => LessThan1.IN35
B[29] => Add0.IN3
B[30] => LessThan0.IN34
B[30] => LessThan1.IN34
B[30] => Add0.IN2
B[31] => LessThan0.IN33
B[31] => LessThan1.IN33
B[31] => Add0.IN1
write_result => result[0]~reg0.ENA
write_result => result[31]~reg0.ENA
write_result => result[30]~reg0.ENA
write_result => result[29]~reg0.ENA
write_result => result[28]~reg0.ENA
write_result => result[27]~reg0.ENA
write_result => result[26]~reg0.ENA
write_result => result[25]~reg0.ENA
write_result => result[24]~reg0.ENA
write_result => result[23]~reg0.ENA
write_result => result[22]~reg0.ENA
write_result => result[21]~reg0.ENA
write_result => result[20]~reg0.ENA
write_result => result[19]~reg0.ENA
write_result => result[18]~reg0.ENA
write_result => result[17]~reg0.ENA
write_result => result[16]~reg0.ENA
write_result => result[15]~reg0.ENA
write_result => result[14]~reg0.ENA
write_result => result[13]~reg0.ENA
write_result => result[12]~reg0.ENA
write_result => result[11]~reg0.ENA
write_result => result[10]~reg0.ENA
write_result => result[9]~reg0.ENA
write_result => result[8]~reg0.ENA
write_result => result[7]~reg0.ENA
write_result => result[6]~reg0.ENA
write_result => result[5]~reg0.ENA
write_result => result[4]~reg0.ENA
write_result => result[3]~reg0.ENA
write_result => result[2]~reg0.ENA
write_result => result[1]~reg0.ENA
write_temp => out_lt~reg0.ENA
write_temp => Temp[31].ENA
write_temp => Temp[30].ENA
write_temp => Temp[29].ENA
write_temp => Temp[28].ENA
write_temp => Temp[27].ENA
write_temp => Temp[26].ENA
write_temp => Temp[25].ENA
write_temp => Temp[24].ENA
write_temp => Temp[23].ENA
write_temp => Temp[22].ENA
write_temp => Temp[21].ENA
write_temp => Temp[20].ENA
write_temp => Temp[19].ENA
write_temp => Temp[18].ENA
write_temp => Temp[17].ENA
write_temp => Temp[16].ENA
write_temp => Temp[15].ENA
write_temp => Temp[14].ENA
write_temp => Temp[13].ENA
write_temp => Temp[12].ENA
write_temp => Temp[11].ENA
write_temp => Temp[10].ENA
write_temp => Temp[9].ENA
write_temp => Temp[8].ENA
write_temp => Temp[7].ENA
write_temp => Temp[6].ENA
write_temp => Temp[5].ENA
write_temp => Temp[4].ENA
write_temp => Temp[3].ENA
write_temp => Temp[2].ENA
write_temp => Temp[1].ENA
write_temp => Temp[0].ENA
result[0] <= result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= result[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= result[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= result[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= result[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= result[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= result[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= result[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= result[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= result[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= result[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= result[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= result[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= result[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= result[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= result[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= result[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= result[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= result[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= result[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= result[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= result[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= result[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= result[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= result[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_lt <= out_lt~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Alu|muxAktar:mux
other_res[0] => anda0.IN1
other_res[1] => anda1.IN1
other_res[2] => anda2.IN1
other_res[3] => anda3.IN1
other_res[4] => anda4.IN1
other_res[5] => anda5.IN1
other_res[6] => anda6.IN1
other_res[7] => anda7.IN1
other_res[8] => anda8.IN1
other_res[9] => anda9.IN1
other_res[10] => anda10.IN1
other_res[11] => anda11.IN1
other_res[12] => anda12.IN1
other_res[13] => anda13.IN1
other_res[14] => anda14.IN1
other_res[15] => anda15.IN1
other_res[16] => anda16.IN1
other_res[17] => anda17.IN1
other_res[18] => anda18.IN1
other_res[19] => anda19.IN1
other_res[20] => anda20.IN1
other_res[21] => anda21.IN1
other_res[22] => anda22.IN1
other_res[23] => anda23.IN1
other_res[24] => anda24.IN1
other_res[25] => anda25.IN1
other_res[26] => anda26.IN1
other_res[27] => anda27.IN1
other_res[28] => anda28.IN1
other_res[29] => anda29.IN1
other_res[30] => anda30.IN1
other_res[31] => anda31.IN1
mod_res[0] => and0.IN1
mod_res[1] => and1.IN1
mod_res[2] => and2.IN1
mod_res[3] => and3.IN1
mod_res[4] => and4.IN1
mod_res[5] => and5.IN1
mod_res[6] => and6.IN1
mod_res[7] => and7.IN1
mod_res[8] => and8.IN1
mod_res[9] => and9.IN1
mod_res[10] => and10.IN1
mod_res[11] => and11.IN1
mod_res[12] => and12.IN1
mod_res[13] => and13.IN1
mod_res[14] => and14.IN1
mod_res[15] => and15.IN1
mod_res[16] => and16.IN1
mod_res[17] => and17.IN1
mod_res[18] => and18.IN1
mod_res[19] => and19.IN1
mod_res[20] => and20.IN1
mod_res[21] => and21.IN1
mod_res[22] => and22.IN1
mod_res[23] => and23.IN1
mod_res[24] => and24.IN1
mod_res[25] => and25.IN1
mod_res[26] => and26.IN1
mod_res[27] => and27.IN1
mod_res[28] => and28.IN1
mod_res[29] => and29.IN1
mod_res[30] => and30.IN1
mod_res[31] => and31.IN1
Alu_Op[0] => anda.IN0
Alu_Op[1] => anda.IN1
Alu_Op[2] => andb.IN1
res[0] <= or0.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= or1.DB_MAX_OUTPUT_PORT_TYPE
res[2] <= or2.DB_MAX_OUTPUT_PORT_TYPE
res[3] <= or3.DB_MAX_OUTPUT_PORT_TYPE
res[4] <= or4.DB_MAX_OUTPUT_PORT_TYPE
res[5] <= or5.DB_MAX_OUTPUT_PORT_TYPE
res[6] <= or6.DB_MAX_OUTPUT_PORT_TYPE
res[7] <= or7.DB_MAX_OUTPUT_PORT_TYPE
res[8] <= or8.DB_MAX_OUTPUT_PORT_TYPE
res[9] <= or9.DB_MAX_OUTPUT_PORT_TYPE
res[10] <= or10.DB_MAX_OUTPUT_PORT_TYPE
res[11] <= or11.DB_MAX_OUTPUT_PORT_TYPE
res[12] <= or12.DB_MAX_OUTPUT_PORT_TYPE
res[13] <= or13.DB_MAX_OUTPUT_PORT_TYPE
res[14] <= or14.DB_MAX_OUTPUT_PORT_TYPE
res[15] <= or15.DB_MAX_OUTPUT_PORT_TYPE
res[16] <= or16.DB_MAX_OUTPUT_PORT_TYPE
res[17] <= or17.DB_MAX_OUTPUT_PORT_TYPE
res[18] <= or18.DB_MAX_OUTPUT_PORT_TYPE
res[19] <= or19.DB_MAX_OUTPUT_PORT_TYPE
res[20] <= or20.DB_MAX_OUTPUT_PORT_TYPE
res[21] <= or21.DB_MAX_OUTPUT_PORT_TYPE
res[22] <= or22.DB_MAX_OUTPUT_PORT_TYPE
res[23] <= or23.DB_MAX_OUTPUT_PORT_TYPE
res[24] <= or24.DB_MAX_OUTPUT_PORT_TYPE
res[25] <= or25.DB_MAX_OUTPUT_PORT_TYPE
res[26] <= or26.DB_MAX_OUTPUT_PORT_TYPE
res[27] <= or27.DB_MAX_OUTPUT_PORT_TYPE
res[28] <= or28.DB_MAX_OUTPUT_PORT_TYPE
res[29] <= or29.DB_MAX_OUTPUT_PORT_TYPE
res[30] <= or30.DB_MAX_OUTPUT_PORT_TYPE
res[31] <= or31.DB_MAX_OUTPUT_PORT_TYPE


